     warning: Logger.warn/2 is deprecated. Use Logger.warning/2 instead
     │
 442 │     Logger.warn("Database health check failed", %{
     │            ~
     │
     └─ lib/slack_clone/performance/connection_pool_optimizer.ex:442:12: SlackClone.Performance.ConnectionPoolOptimizer.log_health_issue/1

     warning: clauses with the same name and arity (number of arguments) should be grouped together, "def handle_call/3" was previously defined (lib/slack_clone/performance/connection_pool_optimizer.ex:92)
     │
 481 │   def handle_call(:get_optimization_history, _from, state) do
     │       ~
     │
     └─ lib/slack_clone/performance/connection_pool_optimizer.ex:481:7

    warning: unused alias Repo
    │
  9 │   alias SlackClone.Repo
    │   ~
    │
    └─ lib/slack_clone/performance/connection_pool_optimizer.ex:9:3

     warning: variable "state" is unused (if the variable is not meant to be used, prefix it with an underscore)
     │
 289 │   defp get_optimal_regions_for_content(state) do
     │                                        ~~~~~
     │
     └─ lib/slack_clone/performance/edge_cache.ex:289:40: SlackClone.Performance.EdgeCache.get_optimal_regions_for_content/1

     warning: variable "current_time" is unused (if the variable is not meant to be used, prefix it with an underscore)
     │
 437 │     current_time = System.system_time(:second)
     │     ~~~~~~~~~~~~
     │
     └─ lib/slack_clone/performance/edge_cache.ex:437:5: SlackClone.Performance.EdgeCache.calculate_cache_stats/2

     warning: variable "region" is unused (if the variable is not meant to be used, prefix it with an underscore)
     │
 571 │   defp get_access_stats(region) do
     │                         ~~~~~~
     │
     └─ lib/slack_clone/performance/edge_cache.ex:571:25: SlackClone.Performance.EdgeCache.get_access_stats/1

     warning: function match_spec_for_pattern/2 is unused
     │
 668 │   defp match_spec_for_pattern(pattern, key_var) do
     │        ~
     │
     └─ lib/slack_clone/performance/edge_cache.ex:668:8: SlackClone.Performance.EdgeCache (module)

    warning: module attribute @user_content_ttl was set but never used
    │
 13 │   @user_content_ttl 1800     # 30 minutes for user-generated content
    │   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    │
    └─ lib/slack_clone/performance/edge_cache.ex:13: SlackClone.Performance.EdgeCache (module)

     warning: variable "workspace_id" is unused (if the variable is not meant to be used, prefix it with an underscore)
     │
 163 │   def start_presence_session(user_id, workspace_id, opts \\ []) do
     │                                       ~~~~~~~~~~~~
     │
     └─ lib/slack_clone/presence_enhanced.ex:163:39: SlackClone.PresenceEnhanced.start_presence_session/3

     warning: variable "workspace_id" is unused (if the variable is not meant to be used, prefix it with an underscore)
     │
 302 │   def update_user_activity_summary(user_id, workspace_id, activity_data) do
     │                                             ~~~~~~~~~~~~
     │
     └─ lib/slack_clone/presence_enhanced.ex:302:45: SlackClone.PresenceEnhanced.update_user_activity_summary/3

    warning: unused alias Channel
    │
 10 │   alias SlackClone.Channels.Channel
    │   ~
    │
    └─ lib/slack_clone/presence_enhanced.ex:10:3

    warning: unused alias Message
    │
 11 │   alias SlackClone.Messages.Message
    │   ~
    │
    └─ lib/slack_clone/services/message_buffer_server.ex:11:3

    warning: variable "message" is unused (if the variable is not meant to be used, prefix it with an underscore)
    │
 50 │         {:ok, message} ->
    │               ~
    │
    └─ lib/slack_clone_web/live/channel_live.ex:50:15: SlackCloneWeb.ChannelLive.handle_event/3

    warning: the following clause will never match:

        {:ok, message}

    because it attempts to match on the result of:

        send_message(socket.assigns.channel_id, content, socket.assigns.current_user)

    which has type:

        dynamic({:error, :not_implemented})

    typing violation found at:
    │
 50 │         {:ok, message} ->
    │         ~~~~~~~~~~~~~~~~~
    │
    └─ lib/slack_clone_web/live/channel_live.ex:50: SlackCloneWeb.ChannelLive.handle_event/3

    warning: the following clause will never match:

        {:ok, _}

    because it attempts to match on the result of:

        delete_message(message_id, socket.assigns.current_user)

    which has type:

        dynamic({:error, :not_implemented})

    typing violation found at:
    │
 85 │       {:ok, _} ->
    │       ~~~~~~~~~~~
    │
    └─ lib/slack_clone_web/live/channel_live.ex:85: SlackCloneWeb.ChannelLive.handle_event/3

    warning: the following clause will never match:

        {:ok, _message}

    because it attempts to match on the result of:

        edit_message(message_id, content, socket.assigns.current_user)

    which has type:

        dynamic({:error, :not_implemented})

    typing violation found at:
    │
 95 │       {:ok, _message} ->
    │       ~~~~~~~~~~~~~~~~~~
    │
    └─ lib/slack_clone_web/live/channel_live.ex:95: SlackCloneWeb.ChannelLive.handle_event/3

     warning: the following clause will never match:

         {:ok, _reaction}

     because it attempts to match on the result of:

         add_reaction(message_id, emoji, socket.assigns.current_user)

     which has type:

         dynamic({:error, :not_implemented})

     typing violation found at:
     │
 105 │       {:ok, _reaction} ->
     │       ~~~~~~~~~~~~~~~~~~~
     │
     └─ lib/slack_clone_web/live/channel_live.ex:105: SlackCloneWeb.ChannelLive.handle_event/3

     warning: got "@impl true" for function handle_info/2 but no behaviour specifies such callback. The known callbacks are:

       * Phoenix.LiveComponent.handle_async/3 (function)
       * Phoenix.LiveComponent.handle_event/3 (function)
       * Phoenix.LiveComponent.mount/1 (function)
       * Phoenix.LiveComponent.render/1 (function)
       * Phoenix.LiveComponent.update/2 (function)
       * Phoenix.LiveComponent.update_many/1 (function)

     │
 130 │   def handle_info({:new_message, message}, socket) do
     │   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     │
     └─ lib/slack_clone_web/live/channel_live.ex:130: SlackCloneWeb.ChannelLive (module)

    warning: variable "workspace_id" is unused (if the variable is not meant to be used, prefix it with an underscore)
    │
 33 │   def list_workspace_channels(workspace_id) do
    │                               ~~~~~~~~~~~~
    │
    └─ lib/slack_clone/workspaces.ex:33:31: SlackClone.Workspaces.list_workspace_channels/1

    warning: variable "user_id" is unused (if the variable is not meant to be used, prefix it with an underscore)
    │
 54 │   def is_member?(workspace_id, user_id) do
    │                                ~~~~~~~
    │
    └─ lib/slack_clone/workspaces.ex:54:32: SlackClone.Workspaces.is_member?/2

    warning: variable "workspace_id" is unused (if the variable is not meant to be used, prefix it with an underscore)
    │
 54 │   def is_member?(workspace_id, user_id) do
    │                  ~~~~~~~~~~~~
    │
    └─ lib/slack_clone/workspaces.ex:54:18: SlackClone.Workspaces.is_member?/2

    warning: unused alias Repo
    │
  7 │   alias SlackClone.Repo
    │   ~
    │
    └─ lib/slack_clone/workspaces.ex:7:3

    warning: SlackCloneWeb.Api.ChannelController.init/1 is undefined (module SlackCloneWeb.Api.ChannelController is not available or is yet to be defined)
    │
  2 │   use SlackCloneWeb, :router
    │   ~~~~~~~~~~~~~~~~~~~~~~~~~~
    │
    └─ lib/slack_clone_web/router.ex:2: SlackCloneWeb.Router.__checks__/0

    warning: SlackCloneWeb.Api.WorkspaceController.init/1 is undefined (module SlackCloneWeb.Api.WorkspaceController is not available or is yet to be defined)
    │
  2 │   use SlackCloneWeb, :router
    │   ~~~~~~~~~~~~~~~~~~~~~~~~~~
    │
    └─ lib/slack_clone_web/router.ex:2: SlackCloneWeb.Router.__checks__/0

    warning: SlackCloneWeb.Api.MessageController.init/1 is undefined (module SlackCloneWeb.Api.MessageController is not available or is yet to be defined)
    │
  2 │   use SlackCloneWeb, :router
    │   ~~~~~~~~~~~~~~~~~~~~~~~~~~
    │
    └─ lib/slack_clone_web/router.ex:2: SlackCloneWeb.Router.__checks__/0

    warning: SlackCloneWeb.Api.MessageController.init/1 is undefined (module SlackCloneWeb.Api.MessageController is not available or is yet to be defined)
    │
 76 │     put "/messages/:id", MessageController, :update
    │     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    │
    └─ lib/slack_clone_web/router.ex:76: SlackCloneWeb.Router.__checks__/0

    warning: SlackCloneWeb.Api.MessageController.init/1 is undefined (module SlackCloneWeb.Api.MessageController is not available or is yet to be defined)
    │
 77 │     delete "/messages/:id", MessageController, :delete
    │     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    │
    └─ lib/slack_clone_web/router.ex:77: SlackCloneWeb.Router.__checks__/0

    warning: SlackCloneWeb.Api.MessageController.init/1 is undefined (module SlackCloneWeb.Api.MessageController is not available or is yet to be defined)
    │
 78 │     post "/messages/:id/reactions", MessageController, :add_reaction
    │     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    │
    └─ lib/slack_clone_web/router.ex:78: SlackCloneWeb.Router.__checks__/0

    warning: SlackCloneWeb.Api.MessageController.init/1 is undefined (module SlackCloneWeb.Api.MessageController is not available or is yet to be defined)
    │
 79 │     delete "/messages/:id/reactions/:reaction_id", MessageController, :remove_reaction
    │     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    │
    └─ lib/slack_clone_web/router.ex:79: SlackCloneWeb.Router.__checks__/0

     warning: SlackClone.Notifications.get_user_preferences/1 is undefined or private
     │
 219 │     case SlackClone.Notifications.get_user_preferences(user.id) do
     │                                   ~
     │
     └─ lib/slack_clone/notifications/email_digest.ex:219:35: SlackClone.Notifications.EmailDigest.should_send_digest?/2

warning: invalid association `operation_logs` in schema SlackClone.Files.FileOperation: associated schema SlackClone.Files.FileOperationLog does not exist
└─ lib/slack_clone/files/file_operation.ex: SlackClone.Files.FileOperation (module)

warning: invalid association `file_upload` in schema SlackClone.Files.FileOperation: associated schema SlackClone.Files.FileUpload does not exist
└─ lib/slack_clone/files/file_operation.ex: SlackClone.Files.FileOperation (module)

    warning: variable "opts" is unused (if the variable is not meant to be used, prefix it with an underscore)
    │
 31 │   def start_link(channel_id, opts \\ []) do
    │                              ~~~~
    │
    └─ lib/slack_clone/services/channel_server.ex:31:30: SlackClone.Services.ChannelServer.start_link/2

     warning: Logger.warn/1 is deprecated. Use Logger.warning/2 instead
     │
 141 │         Logger.warn("User #{user_id} denied access to channel #{state.channel_id}")
     │                ~
     │
     └─ lib/slack_clone/services/channel_server.ex:141:16: SlackClone.Services.ChannelServer.handle_cast/2

     warning: Logger.warn/1 is deprecated. Use Logger.warning/2 instead
     │
 226 │         Logger.warn("User #{user_id} tried to send message but not connected to channel #{state.channel_id}")
     │                ~
     │
     └─ lib/slack_clone/services/channel_server.ex:226:16: SlackClone.Services.ChannelServer.handle_cast/2

     warning: variable "socket_id" is unused (if the variable is not meant to be used, prefix it with an underscore)
     │
 479 │   defp send_recent_messages_to_user(user_id, socket_id, messages) do
     │                                              ~~~~~~~~~
     │
     └─ lib/slack_clone/services/channel_server.ex:479:46: SlackClone.Services.ChannelServer.send_recent_messages_to_user/3

    warning: module attribute @member_activity_timeout was set but never used
    │
 17 │   @member_activity_timeout 300_000  # 5 minutes
    │   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    │
    └─ lib/slack_clone/services/channel_server.ex:17: SlackClone.Services.ChannelServer (module)

     warning: the following clause will never match:

         nil

     because it attempts to match on the result of:

         SlackClone.Channels.get_channel(channel_id)

     which has type:

         dynamic(%{description: binary(), id: term(), name: binary(), type: :public})

     typing violation found at:
     │
 102 │       nil ->
     │       ~~~~~~
     │
     └─ lib/slack_clone/services/channel_server.ex:102: SlackClone.Services.ChannelServer.init/1

     warning: the following clause will never match:

         false

     because it attempts to match on the result of:

         can_access_channel?(state.channel_id, user_id)

     which has type:

         dynamic(true)

     typing violation found at:
     │
 140 │       false ->
     │       ~~~~~~~~
     │
     └─ lib/slack_clone/services/channel_server.ex:140: SlackClone.Services.ChannelServer.handle_cast/2

     warning: variable "token" is unused (if the variable is not meant to be used, prefix it with an underscore)
     │
 152 │         {:ok, token, _claims} = SlackClone.Guardian.encode_and_sign(user)
     │               ~
     │
     └─ lib/slack_clone_web/live/auth_live.ex:152:15: SlackCloneWeb.AuthLive.handle_event/3

     warning: SlackClone.Workspaces.get_user_first_workspace/1 is undefined or private
     │
 155 │         workspace = SlackClone.Workspaces.get_user_first_workspace(user)
     │                                           ~
     │
     └─ lib/slack_clone_web/live/auth_live.ex:155:43: SlackCloneWeb.AuthLive.handle_event/3

     warning: variable "user_id" is unused (if the variable is not meant to be used, prefix it with an underscore)
     │
 380 │   def get_user_device_tokens(user_id) do
     │                              ~~~~~~~
     │
     └─ lib/slack_clone/accounts.ex:380:30: SlackClone.Accounts.get_user_device_tokens/1

     warning: variable "user_id" is unused (if the variable is not meant to be used, prefix it with an underscore)
     │
 400 │   def get_user_webhook_url(user_id) do
     │                            ~~~~~~~
     │
     └─ lib/slack_clone/accounts.ex:400:28: SlackClone.Accounts.get_user_webhook_url/1

     warning: Phoenix.LiveView.JS.stop_propagation/0 is undefined or private
     │
 382 │       <div class="bg-white rounded-lg shadow-slack-lg w-full max-w-2xl mx-4" phx-click={JS.stop_propagation()}>
     │       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     │
     └─ lib/slack_clone_web/live/components/slack_layout_component.ex:382: SlackCloneWeb.SlackLayoutComponent.search_modal/1

     warning: Phoenix.LiveView.JS.stop_propagation/0 is undefined or private
     │
 444 │       <div class="bg-white rounded-lg shadow-slack-lg w-full max-w-lg mx-4" phx-click={JS.stop_propagation()}>
     │       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     │
     └─ lib/slack_clone_web/live/components/slack_layout_component.ex:444: SlackCloneWeb.SlackLayoutComponent.quick_switcher_modal/1

     warning: Phoenix.LiveView.JS.stop_propagation/0 is undefined or private
     │
 508 │       <div class="bg-white rounded-lg shadow-slack-lg w-full max-w-3xl mx-4 max-h-[80vh] overflow-y-auto" phx-click={JS.stop_propagation()}>
     │       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     │
     └─ lib/slack_clone_web/live/components/slack_layout_component.ex:508: SlackCloneWeb.SlackLayoutComponent.keyboard_shortcuts_modal/1

    warning: unused alias Repo
    │
  7 │   alias SlackClone.Repo
    │   ~
    │
    └─ lib/slack_clone/uploads.ex:7:3

     warning: variable "options" is unused (if the variable is not meant to be used, prefix it with an underscore)
     │
 239 │   def send_email(to_email, subject, body, options \\ %{}) do
     │                                           ~~~~~~~
     │
     └─ lib/slack_clone/notifications.ex:239:43: SlackClone.Notifications.send_email/4

     warning: variable "payload" is unused (if the variable is not meant to be used, prefix it with an underscore)
     │
 308 │     payload = %{
     │     ~~~~~~~
     │
     └─ lib/slack_clone/notifications.ex:308:5: SlackClone.Notifications.send_push_notification/2

     warning: variable "subscription" is unused (if the variable is not meant to be used, prefix it with an underscore)
     │
 307 │   defp send_push_notification(subscription, notification) do
     │                               ~~~~~~~~~~~~
     │
     └─ lib/slack_clone/notifications.ex:307:31: SlackClone.Notifications.send_push_notification/2

     warning: variable "period_end" is unused (if the variable is not meant to be used, prefix it with an underscore)
     │
 397 │   defp compile_digest_data(user_id, workspace_id, period_start, period_end) do
     │                                                                 ~~~~~~~~~~
     │
     └─ lib/slack_clone/notifications.ex:397:65: SlackClone.Notifications.compile_digest_data/4

     warning: variable "period_start" is unused (if the variable is not meant to be used, prefix it with an underscore)
     │
 397 │   defp compile_digest_data(user_id, workspace_id, period_start, period_end) do
     │                                                   ~~~~~~~~~~~~
     │
     └─ lib/slack_clone/notifications.ex:397:51: SlackClone.Notifications.compile_digest_data/4

     warning: variable "user_id" is unused (if the variable is not meant to be used, prefix it with an underscore)
     │
 397 │   defp compile_digest_data(user_id, workspace_id, period_start, period_end) do
     │                            ~~~~~~~
     │
     └─ lib/slack_clone/notifications.ex:397:28: SlackClone.Notifications.compile_digest_data/4

     warning: variable "workspace_id" is unused (if the variable is not meant to be used, prefix it with an underscore)
     │
 397 │   defp compile_digest_data(user_id, workspace_id, period_start, period_end) do
     │                                     ~~~~~~~~~~~~
     │
     └─ lib/slack_clone/notifications.ex:397:37: SlackClone.Notifications.compile_digest_data/4

    warning: unused alias Accounts
    │
 16 │   alias SlackClone.{Accounts, Messages, Channels}
    │   ~
    │
    └─ lib/slack_clone/notifications.ex:16:3

    warning: unused alias Channels
    │
 16 │   alias SlackClone.{Accounts, Messages, Channels}
    │   ~
    │
    └─ lib/slack_clone/notifications.ex:16:3

    warning: unused alias Messages
    │
 16 │   alias SlackClone.{Accounts, Messages, Channels}
    │   ~
    │
    └─ lib/slack_clone/notifications.ex:16:3

     warning: this clause in cond will never match:

         is_in_quiet_hours?(preferences)

     since it has type:

         dynamic(false)

     where "preferences" was given the type:

         # type: dynamic()
         # from: lib/slack_clone/notifications.ex:265:51
         preferences

     typing violation found at:
     │
 267 │       is_in_quiet_hours?(preferences) -> false
     │                                       ~
     │
     └─ lib/slack_clone/notifications.ex:267:39: SlackClone.Notifications.should_deliver_notification?/2

     warning: this clause in cond will never match:

         is_user_dnd?(notification.user_id)

     since it has type:

         dynamic(false)

     where "notification" was given the type:

         # type: dynamic()
         # from: lib/slack_clone/notifications.ex:265:37
         notification

     typing violation found at:
     │
 268 │       is_user_dnd?(notification.user_id) -> notification.priority == "urgent"
     │                                          ~
     │
     └─ lib/slack_clone/notifications.ex:268:42: SlackClone.Notifications.should_deliver_notification?/2

     warning: the following clause will never match:

         {:error, reason}

     because it attempts to match on the result of:

         send_push_notification(subscription, notification)

     which has type:

         dynamic(:ok)

     typing violation found at:
     │
 289 │           {:error, reason} ->
     │           ~~~~~~~~~~~~~~~~~~~
     │
     └─ lib/slack_clone/notifications.ex:289: SlackClone.Notifications.deliver_notification/2

     warning: the following clause will never match:

         {:error, reason}

     because it attempts to match on the result of:

         send_email_notification(notification)

     which has type:

         dynamic(:ok)

     typing violation found at:
     │
 301 │         {:error, reason} ->
     │         ~~~~~~~~~~~~~~~~~~~
     │
     └─ lib/slack_clone/notifications.ex:301: SlackClone.Notifications.deliver_notification/2

     warning: DateTime.beginning_of_day/1 is undefined or private
     │
 440 │     start_of_day = DateTime.beginning_of_day(now) |> DateTime.add(-1, :day)
     │                             ~
     │
     └─ lib/slack_clone/notifications.ex:440:29: SlackClone.Notifications.get_digest_period/1

     warning: DateTime.end_of_day/1 is undefined or private
     │
 441 │     end_of_day = DateTime.end_of_day(start_of_day)
     │                           ~
     │
     └─ lib/slack_clone/notifications.ex:441:27: SlackClone.Notifications.get_digest_period/1

     warning: Logger.warn/1 is deprecated. Use Logger.warning/2 instead
     │
 244 │       Logger.warn("Shutting down with #{active_count} active and #{queued_count} queued jobs")
     │              ~
     │
     └─ lib/slack_clone/services/upload_processor.ex:244:14: SlackClone.Services.UploadProcessor.terminate/2

     warning: Logger.warn/1 is deprecated. Use Logger.warning/2 instead
     │
 359 │         Logger.warn("Virus detected in file: #{job.file_path}")
     │                ~
     │
     └─ lib/slack_clone/services/upload_processor.ex:359:16: SlackClone.Services.UploadProcessor.scan_for_viruses/1

     warning: variable "file_path" is unused (if the variable is not meant to be used, prefix it with an underscore)
     │
 458 │   defp simulate_virus_scan(file_path) do
     │                            ~~~~~~~~~
     │
     └─ lib/slack_clone/services/upload_processor.ex:458:28: SlackClone.Services.UploadProcessor.simulate_virus_scan/1

    warning: module attribute @image_processing_timeout was set but never used
    │
 16 │   @image_processing_timeout 15_000
    │   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    │
    └─ lib/slack_clone/services/upload_processor.ex:16: SlackClone.Services.UploadProcessor (module)

    warning: module attribute @scan_timeout was set but never used
    │
 15 │   @scan_timeout 30_000
    │   ~~~~~~~~~~~~~~~~~~~~
    │
    └─ lib/slack_clone/services/upload_processor.ex:15: SlackClone.Services.UploadProcessor (module)

    warning: unused alias Upload
    │
 11 │   alias SlackClone.Uploads.Upload
    │   ~
    │
    └─ lib/slack_clone/services/upload_processor.ex:11:3

     warning: the following clause will never match:

         {:error, reason}

     because it attempts to match on the result of:

         start_job_process(job)

     which has type:

         dynamic({:ok, pid()})

     typing violation found at:
     │
 282 │             {:error, reason} ->
     │             ~~~~~~~~~~~~~~~~~~~
     │
     └─ lib/slack_clone/services/upload_processor.ex:282: SlackClone.Services.UploadProcessor.try_start_next_job/1

    warning: SlackClone.PubSub.subscribe/1 is undefined (module SlackClone.PubSub is not available or is yet to be defined)
    │
 26 │       PubSub.subscribe(PubSub.message_thread_topic(message_id))
    │              ~
    │
    └─ lib/slack_clone_web/live/thread_live.ex:26:14: SlackCloneWeb.ThreadLive.update/2

    warning: SlackClone.PubSub.message_thread_topic/1 is undefined (module SlackClone.PubSub is not available or is yet to be defined)
    │
 26 │       PubSub.subscribe(PubSub.message_thread_topic(message_id))
    │                               ~
    │
    └─ lib/slack_clone_web/live/thread_live.ex:26:31: SlackCloneWeb.ThreadLive.update/2

    warning: the following clause will never match:

        {:ok, _reply}

    because it attempts to match on the result of:

        send_thread_reply(socket.assigns.message_id, content, socket.assigns.current_user)

    which has type:

        dynamic({:error, :not_implemented})

    typing violation found at:
    │
 41 │         {:ok, _reply} ->
    │         ~~~~~~~~~~~~~~~~
    │
    └─ lib/slack_clone_web/live/thread_live.ex:41: SlackCloneWeb.ThreadLive.handle_event/3

    warning: the following clause will never match:

        {:ok, _reply}

    because it attempts to match on the result of:

        edit_thread_reply(reply_id, content, socket.assigns.current_user)

    which has type:

        dynamic({:error, :not_implemented})

    typing violation found at:
    │
 63 │       {:ok, _reply} ->
    │       ~~~~~~~~~~~~~~~~
    │
    └─ lib/slack_clone_web/live/thread_live.ex:63: SlackCloneWeb.ThreadLive.handle_event/3

    warning: the following clause will never match:

        {:ok, _}

    because it attempts to match on the result of:

        delete_thread_reply(reply_id, socket.assigns.current_user)

    which has type:

        dynamic({:error, :not_implemented})

    typing violation found at:
    │
 73 │       {:ok, _} ->
    │       ~~~~~~~~~~~
    │
    └─ lib/slack_clone_web/live/thread_live.ex:73: SlackCloneWeb.ThreadLive.handle_event/3

    warning: the following clause will never match:

        {:ok, _reaction}

    because it attempts to match on the result of:

        add_reply_reaction(reply_id, emoji, socket.assigns.current_user)

    which has type:

        dynamic({:error, :not_implemented})

    typing violation found at:
    │
 83 │       {:ok, _reaction} ->
    │       ~~~~~~~~~~~~~~~~~~~
    │
    └─ lib/slack_clone_web/live/thread_live.ex:83: SlackCloneWeb.ThreadLive.handle_event/3

    warning: got "@impl true" for function handle_info/2 but no behaviour specifies such callback. The known callbacks are:

      * Phoenix.LiveComponent.handle_async/3 (function)
      * Phoenix.LiveComponent.handle_event/3 (function)
      * Phoenix.LiveComponent.mount/1 (function)
      * Phoenix.LiveComponent.render/1 (function)
      * Phoenix.LiveComponent.update/2 (function)
      * Phoenix.LiveComponent.update_many/1 (function)

    │
 93 │   def handle_info({:thread_reply, reply}, socket) do
    │   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    │
    └─ lib/slack_clone_web/live/thread_live.ex:93: SlackCloneWeb.ThreadLive (module)

     warning: variable "token" is unused (if the variable is not meant to be used, prefix it with an underscore)
     │
 152 │         {:ok, token, _claims} = SlackClone.Guardian.encode_and_sign(user)
     │               ~
     │
     └─ lib/slack_clone_web/live/auth_live/login_live.ex:152:15: SlackCloneWeb.AuthLive.LoginLive.handle_event/3

     warning: SlackClone.Workspaces.get_user_first_workspace/1 is undefined or private
     │
 155 │         workspace = SlackClone.Workspaces.get_user_first_workspace(user)
     │                                           ~
     │
     └─ lib/slack_clone_web/live/auth_live/login_live.ex:155:43: SlackCloneWeb.AuthLive.LoginLive.handle_event/3

warning: invalid association `channel` in schema SlackClone.Notifications.MentionDetection: associated schema SlackClone.Chat.Channel does not exist
└─ lib/slack_clone/notifications/mention_detection.ex: SlackClone.Notifications.MentionDetection (module)

warning: invalid association `message` in schema SlackClone.Notifications.MentionDetection: associated schema SlackClone.Chat.Message does not exist
└─ lib/slack_clone/notifications/mention_detection.ex: SlackClone.Notifications.MentionDetection (module)

    warning: variable "params" is unused (if the variable is not meant to be used, prefix it with an underscore)
    │
 12 │   def join("workspace:" <> workspace_id, params, socket) do
    │                                          ~~~~~~
    │
    └─ lib/slack_clone_web/channels/workspace_channel.ex:12:42: SlackCloneWeb.WorkspaceChannel.join/3

     warning: clauses with the same name and arity (number of arguments) should be grouped together, "def handle_info/2" was previously defined (lib/slack_clone_web/channels/workspace_channel.ex:34)
     │
 168 │   def handle_info({:new_message, message}, socket) do
     │       ~
     │
     └─ lib/slack_clone_web/channels/workspace_channel.ex:168:7

     warning: variable "reason" is unused (if the variable is not meant to be used, prefix it with an underscore)
     │
 213 │   def terminate(reason, socket) do
     │                 ~~~~~~
     │
     └─ lib/slack_clone_web/channels/workspace_channel.ex:213:17: SlackCloneWeb.WorkspaceChannel.terminate/2

     warning: variable "user" is unused (if the variable is not meant to be used, prefix it with an underscore)
     │
 225 │   defp authorize_workspace_access(workspace_id, user) do
     │                                                 ~~~~
     │
     └─ lib/slack_clone_web/channels/workspace_channel.ex:225:49: SlackCloneWeb.WorkspaceChannel.authorize_workspace_access/2

     warning: variable "workspace_id" is unused (if the variable is not meant to be used, prefix it with an underscore)
     │
 255 │   defp load_workspace_members(workspace_id) do
     │                               ~~~~~~~~~~~~
     │
     └─ lib/slack_clone_web/channels/workspace_channel.ex:255:31: SlackCloneWeb.WorkspaceChannel.load_workspace_members/1

     warning: variable "user_id" is unused (if the variable is not meant to be used, prefix it with an underscore)
     │
 263 │   defp load_unread_counts(workspace_id, user_id) do
     │                                         ~~~~~~~
     │
     └─ lib/slack_clone_web/channels/workspace_channel.ex:263:41: SlackCloneWeb.WorkspaceChannel.load_unread_counts/2

     warning: variable "workspace_id" is unused (if the variable is not meant to be used, prefix it with an underscore)
     │
 263 │   defp load_unread_counts(workspace_id, user_id) do
     │                           ~~~~~~~~~~~~
     │
     └─ lib/slack_clone_web/channels/workspace_channel.ex:263:27: SlackCloneWeb.WorkspaceChannel.load_unread_counts/2

    warning: SlackClone.PubSub.subscribe_to_workspace/1 is undefined (module SlackClone.PubSub is not available or is yet to be defined)
    │
 48 │     PubSub.subscribe_to_workspace(workspace_id)
    │            ~
    │
    └─ lib/slack_clone_web/channels/workspace_channel.ex:48:12: SlackCloneWeb.WorkspaceChannel.handle_info/2

    warning: SlackClone.PubSub.broadcast_user_status_change/3 is undefined (module SlackClone.PubSub is not available or is yet to be defined)
    │
 70 │     PubSub.broadcast_user_status_change(workspace_id, user_id, status)
    │            ~
    │
    └─ lib/slack_clone_web/channels/workspace_channel.ex:70:12: SlackCloneWeb.WorkspaceChannel.handle_in/3

    warning: the following clause will never match:

        {:ok, channel}

    because it attempts to match on the result of:

        create_channel(workspace_id, %{
          name: name,
          description: description,
          type: type,
          created_by: user.id
        })

    which has type:

        dynamic({:error, :not_implemented})

    typing violation found at:
    │
 85 │       {:ok, channel} ->
    │       ~~~~~~~~~~~~~~~~~
    │
    └─ lib/slack_clone_web/channels/workspace_channel.ex:85: SlackCloneWeb.WorkspaceChannel.handle_in/3

    warning: SlackClone.PubSub.broadcast_channel_created/2 is undefined (module SlackClone.PubSub is not available or is yet to be defined)
    │
 87 │         PubSub.broadcast_channel_created(workspace_id, channel)
    │                ~
    │
    └─ lib/slack_clone_web/channels/workspace_channel.ex:87:16: SlackCloneWeb.WorkspaceChannel.handle_in/3

     warning: the following clause will never match:

         {:ok, membership}

     because it attempts to match on the result of:

         join_channel(channel_id, user.id)

     which has type:

         dynamic({:error, :not_implemented})

     typing violation found at:
     │
 106 │       {:ok, membership} ->
     │       ~~~~~~~~~~~~~~~~~~~~
     │
     └─ lib/slack_clone_web/channels/workspace_channel.ex:106: SlackCloneWeb.WorkspaceChannel.handle_in/3

     warning: SlackClone.PubSub.broadcast_user_joined_channel/3 is undefined (module SlackClone.PubSub is not available or is yet to be defined)
     │
 111 │         PubSub.broadcast_user_joined_channel(channel_id, workspace_id, user)
     │                ~
     │
     └─ lib/slack_clone_web/channels/workspace_channel.ex:111:16: SlackCloneWeb.WorkspaceChannel.handle_in/3

     warning: the following clause will never match:

         {:ok, _}

     because it attempts to match on the result of:

         leave_channel(channel_id, user_id)

     which has type:

         dynamic({:error, :not_implemented})

     typing violation found at:
     │
 133 │       {:ok, _} ->
     │       ~~~~~~~~~~~
     │
     └─ lib/slack_clone_web/channels/workspace_channel.ex:133: SlackCloneWeb.WorkspaceChannel.handle_in/3

     warning: SlackClone.PubSub.broadcast_user_left_channel/3 is undefined (module SlackClone.PubSub is not available or is yet to be defined)
     │
 138 │         PubSub.broadcast_user_left_channel(channel_id, workspace_id, user_id)
     │                ~
     │
     └─ lib/slack_clone_web/channels/workspace_channel.ex:138:16: SlackCloneWeb.WorkspaceChannel.handle_in/3

     warning: SlackClone.PubSub.unsubscribe_from_workspace/1 is undefined (module SlackClone.PubSub is not available or is yet to be defined)
     │
 217 │       PubSub.unsubscribe_from_workspace(workspace_id)
     │              ~
     │
     └─ lib/slack_clone_web/channels/workspace_channel.ex:217:14: SlackCloneWeb.WorkspaceChannel.terminate/2

     warning: variable "now" is unused (if the variable is not meant to be used, prefix it with an underscore)
     │
 184 │     now = DateTime.utc_now()
     │     ~~~
     │
     └─ lib/slack_clone/files/virus_scan.ex:184:5: SlackClone.Files.VirusScan.create_scan_changeset/3

warning: invalid association `file_upload` in schema SlackClone.Files.VirusScan: associated schema SlackClone.Files.FileUpload does not exist
└─ lib/slack_clone/files/virus_scan.ex: SlackClone.Files.VirusScan (module)

    warning: variable "topics" is unused (there is a variable with the same name in the context, use the pin operator (^) to match on it or prefix this variable with underscore if it is not meant to be used)
    │
 77 │       topics = ["#{@presence_topic}#{channel_id}" | topics]
    │       ~
    │
    └─ lib/slack_clone/performance/pubsub_optimizer.ex:77:7: SlackClone.Performance.PubSubOptimizer.subscribe_to_channel/2

     warning: variable "key" is unused (if the variable is not meant to be used, prefix it with an underscore)
     │
 227 │     Enum.each(state.presence_events, fn {key, event} ->
     │                                          ~
     │
     └─ lib/slack_clone/performance/pubsub_optimizer.ex:227:42: SlackClone.Performance.PubSubOptimizer.handle_info/2

    warning: unused alias CacheManager
    │
 10 │   alias SlackClone.Performance.CacheManager
    │   ~
    │
    └─ lib/slack_clone/performance/pubsub_optimizer.ex:10:3

     warning: variable "changeset" is unused (if the variable is not meant to be used, prefix it with an underscore)
     │
 254 │   defp check_time_anomaly(changeset, indicators) do
     │                           ~~~~~~~~~
     │
     └─ lib/slack_clone/files/file_access_log.ex:254:27: SlackClone.Files.FileAccessLog.check_time_anomaly/2

     warning: variable "logs" is unused (if the variable is not meant to be used, prefix it with an underscore)
     │
 589 │   defp generate_compliance_recommendations(logs, framework) do
     │                                            ~~~~
     │
     └─ lib/slack_clone/files/file_access_log.ex:589:44: SlackClone.Files.FileAccessLog.generate_compliance_recommendations/2

warning: invalid association `file_upload` in schema SlackClone.Files.FileAccessLog: associated schema SlackClone.Files.FileUpload does not exist
└─ lib/slack_clone/files/file_access_log.ex: SlackClone.Files.FileAccessLog (module)

    warning: unused alias Presence
    │
  9 │   alias SlackCloneWeb.Presence
    │   ~
    │
    └─ lib/slack_clone_web/live/presence_live.ex:9:3

    warning: unused alias PubSub
    │
  8 │   alias SlackClone.PubSub
    │   ~
    │
    └─ lib/slack_clone_web/live/presence_live.ex:8:3

     warning: variable "time_window_seconds" is unused (if the variable is not meant to be used, prefix it with an underscore)
     │
 144 │   def calculate_typing_speed(indicator, time_window_seconds \\ 10) do
     │                                         ~~~~~~~~~~~~~~~~~~~
     │
     └─ lib/slack_clone/presence_enhanced/typing_indicator.ex:144:41: SlackClone.PresenceEnhanced.TypingIndicator.calculate_typing_speed/2

warning: invalid association `thread` in schema SlackClone.PresenceEnhanced.TypingIndicator: associated schema SlackClone.Chat.Message does not exist
└─ lib/slack_clone/presence_enhanced/typing_indicator.ex: SlackClone.PresenceEnhanced.TypingIndicator (module)

warning: invalid association `channel` in schema SlackClone.PresenceEnhanced.TypingIndicator: associated schema SlackClone.Chat.Channel does not exist
└─ lib/slack_clone/presence_enhanced/typing_indicator.ex: SlackClone.PresenceEnhanced.TypingIndicator (module)

     warning: Logger.warn/1 is deprecated. Use Logger.warning/2 instead
     │
 275 │       Logger.warn("Shutting down with #{queued_count} queued, #{processing_count} processing, #{failed_count} failed notifications")
     │              ~
     │
     └─ lib/slack_clone/services/notification_server.ex:275:14: SlackClone.Services.NotificationServer.terminate/2

     warning: Logger.warn/1 is deprecated. Use Logger.warning/2 instead
     │
 471 │         Logger.warn("Failed to send notification #{notification_id}: #{inspect(reason)}")
     │                ~
     │
     └─ lib/slack_clone/services/notification_server.ex:471:16: SlackClone.Services.NotificationServer.handle_notification_result/3

     warning: Logger.warn/1 is deprecated. Use Logger.warning/2 instead
     │
 504 │         Logger.warn("Received result for unknown notification #{notification_id}")
     │                ~
     │
     └─ lib/slack_clone/services/notification_server.ex:504:16: SlackClone.Services.NotificationServer.handle_notification_result/3

     warning: SlackClone.Notifications.create_notification/1 is undefined or private. Did you mean:

           * create_notification/3

     │
 402 │       {:ok, stored_notification} = Notifications.create_notification(%{
     │                                                  ~
     │
     └─ lib/slack_clone/services/notification_server.ex:402:50: SlackClone.Services.NotificationServer.send_in_app_notification/1

    warning: variable "params" is unused (if the variable is not meant to be used, prefix it with an underscore)
    │
 15 │   def join("channel:" <> channel_id, params, socket) do
    │                                      ~~~~~~
    │
    └─ lib/slack_clone_web/channels/channel_channel.ex:15:38: SlackCloneWeb.ChannelChannel.join/3

     warning: clauses with the same name and arity (number of arguments) should be grouped together, "def handle_info/2" was previously defined (lib/slack_clone_web/channels/channel_channel.ex:36)
     │
 229 │   def handle_info({:new_message, message}, socket) do
     │       ~
     │
     └─ lib/slack_clone_web/channels/channel_channel.ex:229:7

     warning: variable "channel_id" is unused (if the variable is not meant to be used, prefix it with an underscore)
     │
 323 │     channel_id = socket.assigns.channel_id
     │     ~~~~~~~~~~
     │
     └─ lib/slack_clone_web/channels/channel_channel.ex:323:5: SlackCloneWeb.ChannelChannel.handle_thread_reply/3

     warning: variable "user" is unused (if the variable is not meant to be used, prefix it with an underscore)
     │
 358 │   defp authorize_channel_access(channel_id, user) do
     │                                             ~~~~
     │
     └─ lib/slack_clone_web/channels/channel_channel.ex:358:45: SlackCloneWeb.ChannelChannel.authorize_channel_access/2

    warning: SlackClone.PubSub.subscribe_to_channel/1 is undefined (module SlackClone.PubSub is not available or is yet to be defined)
    │
 48 │     PubSub.subscribe_to_channel(channel_id)
    │            ~
    │
    └─ lib/slack_clone_web/channels/channel_channel.ex:48:12: SlackCloneWeb.ChannelChannel.handle_info/2

    warning: the following clause will never match:

        {:ok, message}

    because it attempts to match on the result of:

        create_message(channel_id, user.id, content, extract_message_metadata(params))

    which has type:

        dynamic({:error, :not_implemented})

    typing violation found at:
    │
 71 │       {:ok, message} ->
    │       ~~~~~~~~~~~~~~~~~
    │
    └─ lib/slack_clone_web/channels/channel_channel.ex:71: SlackCloneWeb.ChannelChannel.handle_in/3

    warning: SlackClone.PubSub.broadcast_new_message/2 is undefined (module SlackClone.PubSub is not available or is yet to be defined)
    │
 73 │         PubSub.broadcast_new_message(channel_id, message)
    │                ~
    │
    └─ lib/slack_clone_web/channels/channel_channel.ex:73:16: SlackCloneWeb.ChannelChannel.handle_in/3

    warning: the following clause will never match:

        {:ok, message}

    because it attempts to match on the result of:

        edit_message(message_id, content, user_id)

    which has type:

        dynamic({:error, :not_implemented})

    typing violation found at:
    │
 96 │       {:ok, message} ->
    │       ~~~~~~~~~~~~~~~~~
    │
    └─ lib/slack_clone_web/channels/channel_channel.ex:96: SlackCloneWeb.ChannelChannel.handle_in/3

    warning: SlackClone.PubSub.broadcast_message_updated/2 is undefined (module SlackClone.PubSub is not available or is yet to be defined)
    │
 98 │         PubSub.broadcast_message_updated(socket.assigns.channel_id, message)
    │                ~
    │
    └─ lib/slack_clone_web/channels/channel_channel.ex:98:16: SlackCloneWeb.ChannelChannel.handle_in/3

     warning: the following clause will never match:

         {:ok, _}

     because it attempts to match on the result of:

         delete_message(message_id, user_id)

     which has type:

         dynamic({:error, :not_implemented})

     typing violation found at:
     │
 113 │       {:ok, _} ->
     │       ~~~~~~~~~~~
     │
     └─ lib/slack_clone_web/channels/channel_channel.ex:113: SlackCloneWeb.ChannelChannel.handle_in/3

     warning: SlackClone.PubSub.broadcast_message_deleted/2 is undefined (module SlackClone.PubSub is not available or is yet to be defined)
     │
 115 │         PubSub.broadcast_message_deleted(socket.assigns.channel_id, message_id)
     │                ~
     │
     └─ lib/slack_clone_web/channels/channel_channel.ex:115:16: SlackCloneWeb.ChannelChannel.handle_in/3

     warning: SlackClone.PubSub.broadcast_typing_start/2 is undefined (module SlackClone.PubSub is not available or is yet to be defined)
     │
 136 │     PubSub.broadcast_typing_start(channel_id, user)
     │            ~
     │
     └─ lib/slack_clone_web/channels/channel_channel.ex:136:12: SlackCloneWeb.ChannelChannel.handle_in/3

     warning: the following clause will never match:

         {:ok, reaction}

     because it attempts to match on the result of:

         add_reaction_to_message(message_id, emoji, user_id)

     which has type:

         dynamic({:error, :not_implemented})

     typing violation found at:
     │
 153 │       {:ok, reaction} ->
     │       ~~~~~~~~~~~~~~~~~~
     │
     └─ lib/slack_clone_web/channels/channel_channel.ex:153: SlackCloneWeb.ChannelChannel.handle_in/3

     warning: SlackClone.PubSub.broadcast_reaction_added/3 is undefined (module SlackClone.PubSub is not available or is yet to be defined)
     │
 155 │         PubSub.broadcast_reaction_added(socket.assigns.channel_id, message_id, reaction)
     │                ~
     │
     └─ lib/slack_clone_web/channels/channel_channel.ex:155:16: SlackCloneWeb.ChannelChannel.handle_in/3

     warning: the following clause will never match:

         {:ok, reaction}

     because it attempts to match on the result of:

         remove_reaction(reaction_id, user_id)

     which has type:

         dynamic({:error, :not_implemented})

     typing violation found at:
     │
 170 │       {:ok, reaction} ->
     │       ~~~~~~~~~~~~~~~~~~
     │
     └─ lib/slack_clone_web/channels/channel_channel.ex:170: SlackCloneWeb.ChannelChannel.handle_in/3

     warning: SlackClone.PubSub.broadcast_reaction_removed/3 is undefined (module SlackClone.PubSub is not available or is yet to be defined)
     │
 172 │         PubSub.broadcast_reaction_removed(socket.assigns.channel_id, reaction.message_id, reaction)
     │                ~
     │
     └─ lib/slack_clone_web/channels/channel_channel.ex:172:16: SlackCloneWeb.ChannelChannel.handle_in/3

     warning: SlackClone.PubSub.broadcast_message_read/3 is undefined (module SlackClone.PubSub is not available or is yet to be defined)
     │
 189 │         PubSub.broadcast_message_read(socket.assigns.channel_id, message_id, user_id)
     │                ~
     │
     └─ lib/slack_clone_web/channels/channel_channel.ex:189:16: SlackCloneWeb.ChannelChannel.handle_in/3

     warning: the following clause will never match:

         {:error, _reason}

     because it attempts to match on the result of:

         mark_message_as_read(message_id, user_id)

     which has type:

         dynamic({:ok, :marked})

     typing violation found at:
     │
 192 │       {:error, _reason} ->
     │       ~~~~~~~~~~~~~~~~~~~~
     │
     └─ lib/slack_clone_web/channels/channel_channel.ex:192: SlackCloneWeb.ChannelChannel.handle_in/3

     warning: the following clause will never match:

         {:error, reason}

     because it attempts to match on the result of:

         load_messages_before(channel_id, before_id, 20)

     which has type:

         dynamic({:ok, empty_list()})

     typing violation found at:
     │
 206 │       {:error, reason} ->
     │       ~~~~~~~~~~~~~~~~~~~
     │
     └─ lib/slack_clone_web/channels/channel_channel.ex:206: SlackCloneWeb.ChannelChannel.handle_in/3

     warning: the following clause will never match:

         {:ok, message_with_thread}

     because it attempts to match on the result of:

         get_message_with_thread(message_id)

     which has type:

         dynamic({:error, :not_implemented})

     typing violation found at:
     │
 214 │       {:ok, message_with_thread} ->
     │       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     │
     └─ lib/slack_clone_web/channels/channel_channel.ex:214: SlackCloneWeb.ChannelChannel.handle_in/3

     warning: SlackClone.PubSub.unsubscribe_from_channel/1 is undefined (module SlackClone.PubSub is not available or is yet to be defined)
     │
 313 │       PubSub.unsubscribe_from_channel(channel_id)
     │              ~
     │
     └─ lib/slack_clone_web/channels/channel_channel.ex:313:14: SlackCloneWeb.ChannelChannel.terminate/2

     warning: the following clause will never match:

         {:ok, reply}

     because it attempts to match on the result of:

         create_thread_reply(thread_id, user.id, content)

     which has type:

         dynamic({:error, :not_implemented})

     typing violation found at:
     │
 326 │       {:ok, reply} ->
     │       ~~~~~~~~~~~~~~~
     │
     └─ lib/slack_clone_web/channels/channel_channel.ex:326: SlackCloneWeb.ChannelChannel.handle_thread_reply/3

     warning: SlackClone.PubSub.broadcast_thread_reply/2 is undefined (module SlackClone.PubSub is not available or is yet to be defined)
     │
 328 │         PubSub.broadcast_thread_reply(thread_id, reply)
     │                ~
     │
     └─ lib/slack_clone_web/channels/channel_channel.ex:328:16: SlackCloneWeb.ChannelChannel.handle_thread_reply/3

     warning: SlackClone.PubSub.broadcast_typing_stop/2 is undefined (module SlackClone.PubSub is not available or is yet to be defined)
     │
 352 │     PubSub.broadcast_typing_stop(channel_id, user)
     │            ~
     │
     └─ lib/slack_clone_web/channels/channel_channel.ex:352:12: SlackCloneWeb.ChannelChannel.handle_typing_stop/1

warning: invalid association `workspace` in schema SlackClone.Files.ShareableLink: associated schema SlackClone.Accounts.Workspace does not exist
└─ lib/slack_clone/files/shareable_link.ex: SlackClone.Files.ShareableLink (module)

warning: invalid association `file_upload` in schema SlackClone.Files.ShareableLink: associated schema SlackClone.Files.FileUpload does not exist
└─ lib/slack_clone/files/shareable_link.ex: SlackClone.Files.ShareableLink (module)

     warning: variable "system_info" is unused (if the variable is not meant to be used, prefix it with an underscore)
     │
 236 │     system_info = :erlang.system_info(:system_version)
     │     ~~~~~~~~~~~
     │
     └─ lib/slack_clone_web/telemetry.ex:236:5: SlackCloneWeb.Telemetry.dispatch_system_health/0

     warning: found quoted atom "send_message" but the quotes are not required. Atoms made exclusively of ASCII letters, numbers, underscores, beginning with a letter or underscore, and optionally ending with ! or ? do not require quotes
     │
 355 │           {:"$1", :"send_message", :"$3"},
     │                   ~
     │
     └─ lib/slack_clone/performance/monitor.ex:355:19

     warning: variable "bottlenecks" is unused (if the variable is not meant to be used, prefix it with an underscore)
     │
 515 │     bottlenecks = []
     │     ~~~~~~~~~~~
     │
     └─ lib/slack_clone/performance/monitor.ex:515:5: SlackClone.Performance.Monitor.identify_bottlenecks/1

     warning: variable "info" is unused (if the variable is not meant to be used, prefix it with an underscore)
     │
 712 │   defp parse_redis_info(info) do
     │                         ~~~~
     │
     └─ lib/slack_clone/performance/monitor.ex:712:25: SlackClone.Performance.Monitor.parse_redis_info/1

    warning: unused alias CacheManager
    │
  9 │   alias SlackClone.Performance.{CacheManager, PubSubOptimizer}
    │   ~
    │
    └─ lib/slack_clone/performance/monitor.ex:9:3

    warning: unused alias PubSubOptimizer
    │
  9 │   alias SlackClone.Performance.{CacheManager, PubSubOptimizer}
    │   ~
    │
    └─ lib/slack_clone/performance/monitor.ex:9:3

     warning: Logger.warning/1 is undefined or private. However, there is a macro with the same name and arity. Be sure to require Logger if you intend to invoke this macro
     │
 275 │         Logger.warning("PubSubOptimizer not available: #{inspect(e)}")
     │                ~
     │
     └─ lib/slack_clone/performance/monitor.ex:275:16: SlackClone.Performance.Monitor.collect_pubsub_stats/0

     warning: Logger.warning/1 is undefined or private. However, there is a macro with the same name and arity. Be sure to require Logger if you intend to invoke this macro
     │
 286 │         Logger.warning("PubSubOptimizer process not alive: #{inspect(reason)}")
     │                ~
     │
     └─ lib/slack_clone/performance/monitor.ex:286:16: SlackClone.Performance.Monitor.collect_pubsub_stats/0

     warning: SlackClone.Repo.get_pool_status/0 is undefined or private
     │
 319 │     pool_stats = case SlackClone.Repo.get_pool_status() do
     │                                       ~
     │
     └─ lib/slack_clone/performance/monitor.ex:319:39: SlackClone.Performance.Monitor.collect_database_stats/0

     warning: Phoenix.PubSub.subscribers/2 is undefined or private. Did you mean:

           * subscribe/3
           * subscribe/2
           * unsubscribe/2

     │
 344 │     Phoenix.PubSub.subscribers(SlackClone.PubSub, "connections:active")
     │                    ~
     │
     └─ lib/slack_clone/performance/monitor.ex:344:20: SlackClone.Performance.Monitor.count_active_connections/0

     warning: Logger.warn/1 is deprecated. Use Logger.warning/2 instead
     │
 213 │     Logger.warn("Tracked process #{inspect(pid)} went down: #{inspect(reason)}")
     │            ~
     │
     └─ lib/slack_clone/services/coordinator.ex:213:12: SlackClone.Services.Coordinator.handle_info/2

     warning: variable "channel_id" is unused (if the variable is not meant to be used, prefix it with an underscore)
     │
 336 │     |> Enum.filter(fn {channel_id, _info} ->
     │                        ~
     │
     └─ lib/slack_clone/services/coordinator.ex:336:24: SlackClone.Services.Coordinator.get_workspace_channels/1

     warning: variable "workspace_id" is unused (if the variable is not meant to be used, prefix it with an underscore)
     │
 330 │   defp get_workspace_channels(workspace_id) do
     │                               ~~~~~~~~~~~~
     │
     └─ lib/slack_clone/services/coordinator.ex:330:31: SlackClone.Services.Coordinator.get_workspace_channels/1

    warning: module attribute @service_startup_timeout was set but never used
    │
 13 │   @service_startup_timeout 10_000
    │   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    │
    └─ lib/slack_clone/services/coordinator.ex:13: SlackClone.Services.Coordinator (module)

    warning: unused alias Accounts
    │
  8 │   alias SlackClone.{Messages, Accounts}
    │   ~
    │
    └─ lib/slack_clone/threads.ex:8:3

    warning: SlackClone.Messages.create_message/2 is undefined or private. Did you mean:

          * create_message/0
          * create_message/1

    │
 25 │     case Messages.create_message(attrs, user) do
    │                   ~
    │
    └─ lib/slack_clone/threads.ex:25:19: SlackClone.Threads.create_thread_reply/3

    warning: variable "opts" is unused (if the variable is not meant to be used, prefix it with an underscore)
    │
 29 │   def start_link(workspace_id, opts \\ []) do
    │                                ~~~~
    │
    └─ lib/slack_clone/services/workspace_server.ex:29:32: SlackClone.Services.WorkspaceServer.start_link/2

     warning: Logger.warn/1 is deprecated. Use Logger.warning/2 instead
     │
 131 │         Logger.warn("User #{user_id} attempted to join workspace #{state.workspace_id} but is not a member")
     │                ~
     │
     └─ lib/slack_clone/services/workspace_server.ex:131:16: SlackClone.Services.WorkspaceServer.handle_cast/2

     warning: variable "workspace_id" is unused (if the variable is not meant to be used, prefix it with an underscore)
     │
 407 │   defp get_workspace_message_count(workspace_id) do
     │                                    ~~~~~~~~~~~~
     │
     └─ lib/slack_clone/services/workspace_server.ex:407:36: SlackClone.Services.WorkspaceServer.get_workspace_message_count/1

     warning: variable "workspace_id" is unused (if the variable is not meant to be used, prefix it with an underscore)
     │
 413 │   defp get_last_workspace_activity(workspace_id) do
     │                                    ~~~~~~~~~~~~
     │
     └─ lib/slack_clone/services/workspace_server.ex:413:36: SlackClone.Services.WorkspaceServer.get_last_workspace_activity/1

    warning: unused alias User
    │
 12 │   alias SlackClone.Accounts.User
    │   ~
    │
    └─ lib/slack_clone/services/workspace_server.ex:12:3

    warning: unused alias Workspace
    │
 11 │   alias SlackClone.Workspaces.Workspace
    │   ~
    │
    └─ lib/slack_clone/services/workspace_server.ex:11:3

    warning: the following clause will never match:

        nil

    because it attempts to match on the result of:

        SlackClone.Workspaces.get_workspace(workspace_id)

    which has type:

        dynamic(%{description: binary(), id: term(), name: binary()})

    typing violation found at:
    │
 94 │       nil ->
    │       ~~~~~~
    │
    └─ lib/slack_clone/services/workspace_server.ex:94: SlackClone.Services.WorkspaceServer.init/1

     warning: the following clause will never match:

         false

     because it attempts to match on the result of:

         is_workspace_member?(state.workspace_id, user_id)

     which has type:

         dynamic(true)

     typing violation found at:
     │
 130 │       false ->
     │       ~~~~~~~~
     │
     └─ lib/slack_clone/services/workspace_server.ex:130: SlackClone.Services.WorkspaceServer.handle_cast/2

     warning: the following clause will never match:

         {:error, changeset}

     because it attempts to match on the result of:

         SlackClone.Workspaces.update_workspace(state.workspace_data, updates)

     which has type:

         dynamic({:ok, term()})

     typing violation found at:
     │
 221 │       {:error, changeset} ->
     │       ~~~~~~~~~~~~~~~~~~~~~~
     │
     └─ lib/slack_clone/services/workspace_server.ex:221: SlackClone.Services.WorkspaceServer.handle_cast/2

    warning: do not use "length(keys) > 0" to check if a list is not empty since length always traverses the whole list. Prefer to pattern match on a non-empty list, such as [_ | _], or use "keys != []" as a guard
    │
 57 │         {:ok, keys} when length(keys) > 0 ->
    │                                       ~
    │
    └─ lib/slack_clone/performance/cache_manager.ex:57:39

    warning: SlackClone.Schema.Message.__schema__/1 is undefined (module SlackClone.Schema.Message is not available or is yet to be defined)
    │
 75 │       from(m in SlackClone.Schema.Message,
    │       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    │
    └─ lib/slack_clone/performance/cache_manager.ex:75: SlackClone.Performance.CacheManager.cache_channel_messages/3

     warning: SlackClone.Schema.Channel.__schema__/1 is undefined (module SlackClone.Schema.Channel is not available or is yet to be defined)
     │
 116 │       from(ch in SlackClone.Schema.Channel,
     │       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     │
     └─ lib/slack_clone/performance/cache_manager.ex:116: SlackClone.Performance.CacheManager.cache_user_channels/2

     warning: SlackClone.Schema.Channel.__schema__/1 is undefined (module SlackClone.Schema.Channel is not available or is yet to be defined)
     │
 268 │     from(ch in SlackClone.Schema.Channel,
     │     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     │
     └─ lib/slack_clone/performance/cache_manager.ex:268: SlackClone.Performance.CacheManager.get_popular_channels/0

     warning: SlackClone.Schema.User.__schema__/1 is undefined (module SlackClone.Schema.User is not available or is yet to be defined)
     │
 143 │       from(u in SlackClone.Schema.User,
     │       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     │
     └─ lib/slack_clone/performance/cache_manager.ex:143: SlackClone.Performance.CacheManager.cache_workspace_members/1

     warning: SlackClone.Schema.ChannelMembership.__schema__/1 is undefined (module SlackClone.Schema.ChannelMembership is not available or is yet to be defined)
     │
 254 │     from(cm in SlackClone.Schema.ChannelMembership,
     │     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     │
     └─ lib/slack_clone/performance/cache_manager.ex:254: SlackClone.Performance.CacheManager.get_channel_member_count/1

     warning: SlackClone.Schema.Workspace.__schema__/1 is undefined (module SlackClone.Schema.Workspace is not available or is yet to be defined)
     │
 282 │     from(ws in SlackClone.Schema.Workspace,
     │     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     │
     └─ lib/slack_clone/performance/cache_manager.ex:282: SlackClone.Performance.CacheManager.get_active_workspaces/0

     warning: variable "user_id" is unused (if the variable is not meant to be used, prefix it with an underscore)
     │
 189 │       |> Enum.filter(fn {user_id, _presence} ->
     │                          ~
     │
     └─ lib/slack_clone/services/presence_tracker.ex:189:26: SlackClone.Services.PresenceTracker.handle_call/3

     warning: variable "workspace_id" is unused (if the variable is not meant to be used, prefix it with an underscore)
     │
 185 │   def handle_call({:get_workspace_presence, workspace_id}, _from, state) do
     │                                             ~~~~~~~~~~~~
     │
     └─ lib/slack_clone/services/presence_tracker.ex:185:45: SlackClone.Services.PresenceTracker.handle_call/3

    warning: unused alias User
    │
 11 │   alias SlackClone.Accounts.User
    │   ~
    │
    └─ lib/slack_clone/services/presence_tracker.ex:11:3

    warning: SlackClone.Accounts.update_user/2 is undefined or private. Did you mean:

          * update_user_email/2
          * update_user_password/3

    │
 24 │     case Accounts.update_user(user, user_params) do
    │                   ~
    │
    └─ lib/slack_clone_web/controllers/api/user_controller.ex:24:19: SlackCloneWeb.Api.UserController.update/2

warning: invalid association `conflict_logs` in schema SlackClone.Files.CollaborativeEditingSession: associated schema SlackClone.Files.ConflictLog does not exist
└─ lib/slack_clone/files/collaborative_editing_session.ex: SlackClone.Files.CollaborativeEditingSession (module)

warning: invalid association `operation_logs` in schema SlackClone.Files.CollaborativeEditingSession: associated schema SlackClone.Files.OperationLog does not exist
└─ lib/slack_clone/files/collaborative_editing_session.ex: SlackClone.Files.CollaborativeEditingSession (module)

warning: invalid association `session_participants` in schema SlackClone.Files.CollaborativeEditingSession: associated schema SlackClone.Files.SessionParticipant does not exist
└─ lib/slack_clone/files/collaborative_editing_session.ex: SlackClone.Files.CollaborativeEditingSession (module)

warning: invalid association `file_upload` in schema SlackClone.Files.CollaborativeEditingSession: associated schema SlackClone.Files.FileUpload does not exist
└─ lib/slack_clone/files/collaborative_editing_session.ex: SlackClone.Files.CollaborativeEditingSession (module)

     warning: variable "since" is unused (if the variable is not meant to be used, prefix it with an underscore)
     │
 313 │   def calculate_online_time(user_status, since \\ nil) do
     │                                          ~~~~~
     │
     └─ lib/slack_clone/presence_enhanced/user_status.ex:313:42: SlackClone.PresenceEnhanced.UserStatus.calculate_online_time/2

    warning: variable "channel_id" is unused (if the variable is not meant to be used, prefix it with an underscore)
    │
 25 │   def can_access?(channel_id, user_id) do
    │                   ~~~~~~~~~~
    │
    └─ lib/slack_clone/channels.ex:25:19: SlackClone.Channels.can_access?/2

    warning: variable "user_id" is unused (if the variable is not meant to be used, prefix it with an underscore)
    │
 25 │   def can_access?(channel_id, user_id) do
    │                               ~~~~~~~
    │
    └─ lib/slack_clone/channels.ex:25:31: SlackClone.Channels.can_access?/2

    warning: unused alias Repo
    │
  7 │   alias SlackClone.Repo
    │   ~
    │
    └─ lib/slack_clone/channels.ex:7:3

     warning: variable "offset" is unused (if the variable is not meant to be used, prefix it with an underscore)
     │
 232 │   def search_all(workspace_id, query_string, filters, limit, offset, user_id) do
     │                                                              ~~~~~~
     │
     └─ lib/slack_clone/search.ex:232:62: SlackClone.Search.search_all/6

    warning: unused alias ElasticsearchClient
    │
  8 │   alias SlackClone.Search.{Query, ElasticsearchClient}
    │   ~
    │
    └─ lib/slack_clone/search.ex:8:3

    warning: variable "session" is unused (if the variable is not meant to be used, prefix it with an underscore)
    │
 13 │   def mount(%{"workspace_id" => workspace_id} = params, session, socket) do
    │                                                         ~~~~~~~
    │
    └─ lib/slack_clone_web/live/workspace_live.ex:13:57: SlackCloneWeb.WorkspaceLive.mount/3

     warning: variable "content" is unused (if the variable is not meant to be used, prefix it with an underscore)
     │
 214 │   def handle_event("send_thread_reply", %{"content" => content}, socket) do
     │                                                        ~~~~~~~
     │
     └─ lib/slack_clone_web/live/workspace_live.ex:214:56: SlackCloneWeb.WorkspaceLive.handle_event/3

     warning: variable "session" is unused (if the variable is not meant to be used, prefix it with an underscore)
     │
 582 │   defp get_current_user(session) do
     │                         ~~~~~~~
     │
     └─ lib/slack_clone_web/live/workspace_live.ex:582:25: SlackCloneWeb.WorkspaceLive.get_current_user/1

     warning: function load_workspace_data/2 is unused
     │
 592 │   defp load_workspace_data(socket, workspace_id) do
     │        ~
     │
     └─ lib/slack_clone_web/live/workspace_live.ex:592:8: SlackCloneWeb.WorkspaceLive (module)

     warning: function load_channels/1 is unused
     │
 602 │   defp load_channels(workspace_id) do
     │        ~
     │
     └─ lib/slack_clone_web/live/workspace_live.ex:602:8: SlackCloneWeb.WorkspaceLive (module)

     warning: function leave_channel/2 is unused
     │
 649 │   defp leave_channel(_channel_id, _user_id), do: {:error, :not_implemented}
     │        ~
     │
     └─ lib/slack_clone_web/live/workspace_live.ex:649:8: SlackCloneWeb.WorkspaceLive (module)

     warning: function join_channel/2 is unused
     │
 648 │   defp join_channel(_channel_id, _user), do: {:error, :not_implemented}  
     │        ~
     │
     └─ lib/slack_clone_web/live/workspace_live.ex:648:8: SlackCloneWeb.WorkspaceLive (module)

     warning: function get_current_user/1 is unused
     │
 582 │   defp get_current_user(session) do
     │        ~
     │
     └─ lib/slack_clone_web/live/workspace_live.ex:582:8: SlackCloneWeb.WorkspaceLive (module)

     warning: function create_channel/4 is unused
     │
 647 │   defp create_channel(_workspace_id, _name, _description, _user), do: {:error, :not_implemented}
     │        ~
     │
     └─ lib/slack_clone_web/live/workspace_live.ex:647:8: SlackCloneWeb.WorkspaceLive (module)

    warning: unused alias Accounts
    │
  8 │   alias SlackClone.{Workspaces, Channels, Messages, Accounts}
    │   ~
    │
    └─ lib/slack_clone_web/live/workspace_live.ex:8:3

    warning: SlackClone.Workspaces.get_workspace!/1 is undefined or private. Did you mean:

          * get_workspace/1

    │
 14 │     workspace = Workspaces.get_workspace!(workspace_id)
    │                            ~
    │
    └─ lib/slack_clone_web/live/workspace_live.ex:14:28: SlackCloneWeb.WorkspaceLive.mount/3

    warning: SlackClone.Channels.list_workspace_channels/1 is undefined or private
    │
 15 │     channels = Channels.list_workspace_channels(workspace_id)
    │                         ~
    │
    └─ lib/slack_clone_web/live/workspace_live.ex:15:25: SlackCloneWeb.WorkspaceLive.mount/3

    warning: SlackClone.Channels.get_channel!/1 is undefined or private. Did you mean:

          * get_channel/1

    │
 20 │       channel_id -> Channels.get_channel!(channel_id)
    │                              ~
    │
    └─ lib/slack_clone_web/live/workspace_live.ex:20:30: SlackCloneWeb.WorkspaceLive.mount/3

    warning: SlackClone.Channels.get_channel!/1 is undefined or private. Did you mean:

          * get_channel/1

    │
 70 │     channel = Channels.get_channel!(channel_id)
    │                        ~
    │
    └─ lib/slack_clone_web/live/workspace_live.ex:70:24: SlackCloneWeb.WorkspaceLive.handle_params/3

     warning: SlackClone.Channels.get_channel!/1 is undefined or private. Did you mean:

           * get_channel/1

     │
 150 │     channel = Channels.get_channel!(channel_id)
     │                        ~
     │
     └─ lib/slack_clone_web/live/workspace_live.ex:150:24: SlackCloneWeb.WorkspaceLive.handle_event/3

    warning: SlackClone.Messages.list_channel_messages/1 is undefined or private
    │
 35 │     messages = if channel, do: Messages.list_channel_messages(channel.id), else: []
    │                                         ~
    │
    └─ lib/slack_clone_web/live/workspace_live.ex:35:41: SlackCloneWeb.WorkspaceLive.mount/3

    warning: SlackClone.Messages.list_channel_messages/1 is undefined or private
    │
 71 │     messages = Messages.list_channel_messages(channel_id)
    │                         ~
    │
    └─ lib/slack_clone_web/live/workspace_live.ex:71:25: SlackCloneWeb.WorkspaceLive.handle_params/3

     warning: SlackClone.Messages.list_channel_messages/1 is undefined or private
     │
 153 │     messages = Messages.list_channel_messages(channel_id)
     │                         ~
     │
     └─ lib/slack_clone_web/live/workspace_live.ex:153:25: SlackCloneWeb.WorkspaceLive.handle_event/3

     warning: Routes.live_path/3 is undefined (module Routes is not available or is yet to be defined). Make sure the module name is correct and has been specified in full (or that an alias has been defined)
     │
 639 │       path = Routes.live_path(socket, __MODULE__, socket.assigns.workspace_id)
     │                     ~
     │
     └─ lib/slack_clone_web/live/workspace_live.ex:639:21: SlackCloneWeb.WorkspaceLive.maybe_redirect_from_deleted_channel/2

warning: you are accessing the variable "message" inside a LiveView template.

Using variables in HEEx templates are discouraged as they disable change tracking. You are only allowed to access variables defined by Elixir control-flow structures, such as if/case/for, or those defined by the special attributes :let/:if/:for. If you are shadowing a variable defined outside of the template using a control-flow structure, you must choose a unique variable name within the template.

Instead of:

    def add(assigns) do
      result = assigns.a + assigns.b
      ~H"the result is: {result}"
    end

You must do:

    def add(assigns) do
      assigns = assign(assigns, :result, assigns.a + assigns.b)
      ~H"the result is: {@result}"
    end

  lib/slack_clone_web/live/optimized_channel_live.ex:281: SlackCloneWeb.OptimizedChannelLive.render_optimized_message/2

warning: you are accessing the variable "message" inside a LiveView template.

Using variables in HEEx templates are discouraged as they disable change tracking. You are only allowed to access variables defined by Elixir control-flow structures, such as if/case/for, or those defined by the special attributes :let/:if/:for. If you are shadowing a variable defined outside of the template using a control-flow structure, you must choose a unique variable name within the template.

Instead of:

    def add(assigns) do
      result = assigns.a + assigns.b
      ~H"the result is: {result}"
    end

You must do:

    def add(assigns) do
      assigns = assign(assigns, :result, assigns.a + assigns.b)
      ~H"the result is: {@result}"
    end

  lib/slack_clone_web/live/optimized_channel_live.ex:282: SlackCloneWeb.OptimizedChannelLive.render_optimized_message/2

warning: you are accessing the variable "message" inside a LiveView template.

Using variables in HEEx templates are discouraged as they disable change tracking. You are only allowed to access variables defined by Elixir control-flow structures, such as if/case/for, or those defined by the special attributes :let/:if/:for. If you are shadowing a variable defined outside of the template using a control-flow structure, you must choose a unique variable name within the template.

Instead of:

    def add(assigns) do
      result = assigns.a + assigns.b
      ~H"the result is: {result}"
    end

You must do:

    def add(assigns) do
      assigns = assign(assigns, :result, assigns.a + assigns.b)
      ~H"the result is: {@result}"
    end

  lib/slack_clone_web/live/optimized_channel_live.ex:288: SlackCloneWeb.OptimizedChannelLive.render_optimized_message/2

warning: you are accessing the variable "message" inside a LiveView template.

Using variables in HEEx templates are discouraged as they disable change tracking. You are only allowed to access variables defined by Elixir control-flow structures, such as if/case/for, or those defined by the special attributes :let/:if/:for. If you are shadowing a variable defined outside of the template using a control-flow structure, you must choose a unique variable name within the template.

Instead of:

    def add(assigns) do
      result = assigns.a + assigns.b
      ~H"the result is: {result}"
    end

You must do:

    def add(assigns) do
      assigns = assign(assigns, :result, assigns.a + assigns.b)
      ~H"the result is: {@result}"
    end

  lib/slack_clone_web/live/optimized_channel_live.ex:289: SlackCloneWeb.OptimizedChannelLive.render_optimized_message/2

warning: you are accessing the variable "message" inside a LiveView template.

Using variables in HEEx templates are discouraged as they disable change tracking. You are only allowed to access variables defined by Elixir control-flow structures, such as if/case/for, or those defined by the special attributes :let/:if/:for. If you are shadowing a variable defined outside of the template using a control-flow structure, you must choose a unique variable name within the template.

Instead of:

    def add(assigns) do
      result = assigns.a + assigns.b
      ~H"the result is: {result}"
    end

You must do:

    def add(assigns) do
      assigns = assign(assigns, :result, assigns.a + assigns.b)
      ~H"the result is: {@result}"
    end

  lib/slack_clone_web/live/optimized_channel_live.ex:290: SlackCloneWeb.OptimizedChannelLive.render_optimized_message/2

warning: you are accessing the variable "message" inside a LiveView template.

Using variables in HEEx templates are discouraged as they disable change tracking. You are only allowed to access variables defined by Elixir control-flow structures, such as if/case/for, or those defined by the special attributes :let/:if/:for. If you are shadowing a variable defined outside of the template using a control-flow structure, you must choose a unique variable name within the template.

Instead of:

    def add(assigns) do
      result = assigns.a + assigns.b
      ~H"the result is: {result}"
    end

You must do:

    def add(assigns) do
      assigns = assign(assigns, :result, assigns.a + assigns.b)
      ~H"the result is: {@result}"
    end

  lib/slack_clone_web/live/optimized_channel_live.ex:292: SlackCloneWeb.OptimizedChannelLive.render_optimized_message/2

warning: you are accessing the variable "message" inside a LiveView template.

Using variables in HEEx templates are discouraged as they disable change tracking. You are only allowed to access variables defined by Elixir control-flow structures, such as if/case/for, or those defined by the special attributes :let/:if/:for. If you are shadowing a variable defined outside of the template using a control-flow structure, you must choose a unique variable name within the template.

Instead of:

    def add(assigns) do
      result = assigns.a + assigns.b
      ~H"the result is: {result}"
    end

You must do:

    def add(assigns) do
      assigns = assign(assigns, :result, assigns.a + assigns.b)
      ~H"the result is: {@result}"
    end

  lib/slack_clone_web/live/optimized_channel_live.ex:292: SlackCloneWeb.OptimizedChannelLive.render_optimized_message/2

warning: you are accessing the variable "message" inside a LiveView template.

Using variables in HEEx templates are discouraged as they disable change tracking. You are only allowed to access variables defined by Elixir control-flow structures, such as if/case/for, or those defined by the special attributes :let/:if/:for. If you are shadowing a variable defined outside of the template using a control-flow structure, you must choose a unique variable name within the template.

Instead of:

    def add(assigns) do
      result = assigns.a + assigns.b
      ~H"the result is: {result}"
    end

You must do:

    def add(assigns) do
      assigns = assign(assigns, :result, assigns.a + assigns.b)
      ~H"the result is: {@result}"
    end

  lib/slack_clone_web/live/optimized_channel_live.ex:297: SlackCloneWeb.OptimizedChannelLive.render_optimized_message/2

warning: you are accessing the variable "message" inside a LiveView template.

Using variables in HEEx templates are discouraged as they disable change tracking. You are only allowed to access variables defined by Elixir control-flow structures, such as if/case/for, or those defined by the special attributes :let/:if/:for. If you are shadowing a variable defined outside of the template using a control-flow structure, you must choose a unique variable name within the template.

Instead of:

    def add(assigns) do
      result = assigns.a + assigns.b
      ~H"the result is: {result}"
    end

You must do:

    def add(assigns) do
      assigns = assign(assigns, :result, assigns.a + assigns.b)
      ~H"the result is: {@result}"
    end

  lib/slack_clone_web/live/optimized_channel_live.ex:300: SlackCloneWeb.OptimizedChannelLive.render_optimized_message/2

warning: you are accessing the variable "message" inside a LiveView template.

Using variables in HEEx templates are discouraged as they disable change tracking. You are only allowed to access variables defined by Elixir control-flow structures, such as if/case/for, or those defined by the special attributes :let/:if/:for. If you are shadowing a variable defined outside of the template using a control-flow structure, you must choose a unique variable name within the template.

Instead of:

    def add(assigns) do
      result = assigns.a + assigns.b
      ~H"the result is: {result}"
    end

You must do:

    def add(assigns) do
      assigns = assign(assigns, :result, assigns.a + assigns.b)
      ~H"the result is: {@result}"
    end

  lib/slack_clone_web/live/optimized_channel_live.ex:300: SlackCloneWeb.OptimizedChannelLive.render_optimized_message/2

warning: you are accessing the variable "message" inside a LiveView template.

Using variables in HEEx templates are discouraged as they disable change tracking. You are only allowed to access variables defined by Elixir control-flow structures, such as if/case/for, or those defined by the special attributes :let/:if/:for. If you are shadowing a variable defined outside of the template using a control-flow structure, you must choose a unique variable name within the template.

Instead of:

    def add(assigns) do
      result = assigns.a + assigns.b
      ~H"the result is: {result}"
    end

You must do:

    def add(assigns) do
      assigns = assign(assigns, :result, assigns.a + assigns.b)
      ~H"the result is: {@result}"
    end

  lib/slack_clone_web/live/optimized_channel_live.ex:302: SlackCloneWeb.OptimizedChannelLive.render_optimized_message/2

warning: you are accessing the variable "message" inside a LiveView template.

Using variables in HEEx templates are discouraged as they disable change tracking. You are only allowed to access variables defined by Elixir control-flow structures, such as if/case/for, or those defined by the special attributes :let/:if/:for. If you are shadowing a variable defined outside of the template using a control-flow structure, you must choose a unique variable name within the template.

Instead of:

    def add(assigns) do
      result = assigns.a + assigns.b
      ~H"the result is: {result}"
    end

You must do:

    def add(assigns) do
      assigns = assign(assigns, :result, assigns.a + assigns.b)
      ~H"the result is: {@result}"
    end

  lib/slack_clone_web/live/optimized_channel_live.ex:300: SlackCloneWeb.OptimizedChannelLive.render_optimized_message/2

warning: you are accessing the variable "message" inside a LiveView template.

Using variables in HEEx templates are discouraged as they disable change tracking. You are only allowed to access variables defined by Elixir control-flow structures, such as if/case/for, or those defined by the special attributes :let/:if/:for. If you are shadowing a variable defined outside of the template using a control-flow structure, you must choose a unique variable name within the template.

Instead of:

    def add(assigns) do
      result = assigns.a + assigns.b
      ~H"the result is: {result}"
    end

You must do:

    def add(assigns) do
      assigns = assign(assigns, :result, assigns.a + assigns.b)
      ~H"the result is: {@result}"
    end

  lib/slack_clone_web/live/optimized_channel_live.ex:300: SlackCloneWeb.OptimizedChannelLive.render_optimized_message/2

warning: you are accessing the variable "message" inside a LiveView template.

Using variables in HEEx templates are discouraged as they disable change tracking. You are only allowed to access variables defined by Elixir control-flow structures, such as if/case/for, or those defined by the special attributes :let/:if/:for. If you are shadowing a variable defined outside of the template using a control-flow structure, you must choose a unique variable name within the template.

Instead of:

    def add(assigns) do
      result = assigns.a + assigns.b
      ~H"the result is: {result}"
    end

You must do:

    def add(assigns) do
      assigns = assign(assigns, :result, assigns.a + assigns.b)
      ~H"the result is: {@result}"
    end

  lib/slack_clone_web/live/optimized_channel_live.ex:302: SlackCloneWeb.OptimizedChannelLive.render_optimized_message/2

warning: you are accessing the variable "message" inside a LiveView template.

Using variables in HEEx templates are discouraged as they disable change tracking. You are only allowed to access variables defined by Elixir control-flow structures, such as if/case/for, or those defined by the special attributes :let/:if/:for. If you are shadowing a variable defined outside of the template using a control-flow structure, you must choose a unique variable name within the template.

Instead of:

    def add(assigns) do
      result = assigns.a + assigns.b
      ~H"the result is: {result}"
    end

You must do:

    def add(assigns) do
      assigns = assign(assigns, :result, assigns.a + assigns.b)
      ~H"the result is: {@result}"
    end

  lib/slack_clone_web/live/optimized_channel_live.ex:313: SlackCloneWeb.OptimizedChannelLive.render_optimized_message/2

warning: you are accessing the variable "message" inside a LiveView template.

Using variables in HEEx templates are discouraged as they disable change tracking. You are only allowed to access variables defined by Elixir control-flow structures, such as if/case/for, or those defined by the special attributes :let/:if/:for. If you are shadowing a variable defined outside of the template using a control-flow structure, you must choose a unique variable name within the template.

Instead of:

    def add(assigns) do
      result = assigns.a + assigns.b
      ~H"the result is: {result}"
    end

You must do:

    def add(assigns) do
      assigns = assign(assigns, :result, assigns.a + assigns.b)
      ~H"the result is: {@result}"
    end

  lib/slack_clone_web/live/optimized_channel_live.ex:410: SlackCloneWeb.OptimizedChannelLive.render_message_actions/2

warning: you are accessing the variable "message" inside a LiveView template.

Using variables in HEEx templates are discouraged as they disable change tracking. You are only allowed to access variables defined by Elixir control-flow structures, such as if/case/for, or those defined by the special attributes :let/:if/:for. If you are shadowing a variable defined outside of the template using a control-flow structure, you must choose a unique variable name within the template.

Instead of:

    def add(assigns) do
      result = assigns.a + assigns.b
      ~H"the result is: {result}"
    end

You must do:

    def add(assigns) do
      assigns = assign(assigns, :result, assigns.a + assigns.b)
      ~H"the result is: {@result}"
    end

  lib/slack_clone_web/live/optimized_channel_live.ex:417: SlackCloneWeb.OptimizedChannelLive.render_message_actions/2

warning: you are accessing the variable "message" inside a LiveView template.

Using variables in HEEx templates are discouraged as they disable change tracking. You are only allowed to access variables defined by Elixir control-flow structures, such as if/case/for, or those defined by the special attributes :let/:if/:for. If you are shadowing a variable defined outside of the template using a control-flow structure, you must choose a unique variable name within the template.

Instead of:

    def add(assigns) do
      result = assigns.a + assigns.b
      ~H"the result is: {result}"
    end

You must do:

    def add(assigns) do
      assigns = assign(assigns, :result, assigns.a + assigns.b)
      ~H"the result is: {@result}"
    end

  lib/slack_clone_web/live/optimized_channel_live.ex:422: SlackCloneWeb.OptimizedChannelLive.render_message_actions/2

warning: you are accessing the variable "message" inside a LiveView template.

Using variables in HEEx templates are discouraged as they disable change tracking. You are only allowed to access variables defined by Elixir control-flow structures, such as if/case/for, or those defined by the special attributes :let/:if/:for. If you are shadowing a variable defined outside of the template using a control-flow structure, you must choose a unique variable name within the template.

Instead of:

    def add(assigns) do
      result = assigns.a + assigns.b
      ~H"the result is: {result}"
    end

You must do:

    def add(assigns) do
      assigns = assign(assigns, :result, assigns.a + assigns.b)
      ~H"the result is: {@result}"
    end

  lib/slack_clone_web/live/optimized_channel_live.ex:433: SlackCloneWeb.OptimizedChannelLive.render_message_actions/2

warning: you are accessing the variable "message" inside a LiveView template.

Using variables in HEEx templates are discouraged as they disable change tracking. You are only allowed to access variables defined by Elixir control-flow structures, such as if/case/for, or those defined by the special attributes :let/:if/:for. If you are shadowing a variable defined outside of the template using a control-flow structure, you must choose a unique variable name within the template.

Instead of:

    def add(assigns) do
      result = assigns.a + assigns.b
      ~H"the result is: {result}"
    end

You must do:

    def add(assigns) do
      assigns = assign(assigns, :result, assigns.a + assigns.b)
      ~H"the result is: {@result}"
    end

  lib/slack_clone_web/live/optimized_channel_live.ex:417: SlackCloneWeb.OptimizedChannelLive.render_message_actions/2

warning: you are accessing the variable "message" inside a LiveView template.

Using variables in HEEx templates are discouraged as they disable change tracking. You are only allowed to access variables defined by Elixir control-flow structures, such as if/case/for, or those defined by the special attributes :let/:if/:for. If you are shadowing a variable defined outside of the template using a control-flow structure, you must choose a unique variable name within the template.

Instead of:

    def add(assigns) do
      result = assigns.a + assigns.b
      ~H"the result is: {result}"
    end

You must do:

    def add(assigns) do
      assigns = assign(assigns, :result, assigns.a + assigns.b)
      ~H"the result is: {@result}"
    end

  lib/slack_clone_web/live/optimized_channel_live.ex:422: SlackCloneWeb.OptimizedChannelLive.render_message_actions/2

warning: you are accessing the variable "message" inside a LiveView template.

Using variables in HEEx templates are discouraged as they disable change tracking. You are only allowed to access variables defined by Elixir control-flow structures, such as if/case/for, or those defined by the special attributes :let/:if/:for. If you are shadowing a variable defined outside of the template using a control-flow structure, you must choose a unique variable name within the template.

Instead of:

    def add(assigns) do
      result = assigns.a + assigns.b
      ~H"the result is: {result}"
    end

You must do:

    def add(assigns) do
      assigns = assign(assigns, :result, assigns.a + assigns.b)
      ~H"the result is: {@result}"
    end

  lib/slack_clone_web/live/optimized_channel_live.ex:433: SlackCloneWeb.OptimizedChannelLive.render_message_actions/2

     warning: variable "optimistic" is unused (if the variable is not meant to be used, prefix it with an underscore)
     │
 473 │     optimistic = Keyword.get(opts, :optimistic, false)
     │     ~~~~~~~~~~
     │
     └─ lib/slack_clone_web/live/optimized_channel_live.ex:473:5: SlackCloneWeb.OptimizedChannelLive.add_message_to_state/3

     warning: variable "message_id" is unused (if the variable is not meant to be used, prefix it with an underscore)
     │
 627 │   defp handle_message_action("react", message_id, params, socket) do
     │                                       ~~~~~~~~~~
     │
     └─ lib/slack_clone_web/live/optimized_channel_live.ex:627:39: SlackCloneWeb.OptimizedChannelLive.handle_message_action/4

     warning: variable "params" is unused (if the variable is not meant to be used, prefix it with an underscore)
     │
 627 │   defp handle_message_action("react", message_id, params, socket) do
     │                                                   ~~~~~~
     │
     └─ lib/slack_clone_web/live/optimized_channel_live.ex:627:51: SlackCloneWeb.OptimizedChannelLive.handle_message_action/4

     warning: variable "message_id" is unused (if the variable is not meant to be used, prefix it with an underscore)
     │
 632 │   defp handle_message_action("edit", message_id, params, socket) do
     │                                      ~~~~~~~~~~
     │
     └─ lib/slack_clone_web/live/optimized_channel_live.ex:632:38: SlackCloneWeb.OptimizedChannelLive.handle_message_action/4

     warning: variable "params" is unused (if the variable is not meant to be used, prefix it with an underscore)
     │
 632 │   defp handle_message_action("edit", message_id, params, socket) do
     │                                                  ~~~~~~
     │
     └─ lib/slack_clone_web/live/optimized_channel_live.ex:632:50: SlackCloneWeb.OptimizedChannelLive.handle_message_action/4

     warning: variable "message_id" is unused (if the variable is not meant to be used, prefix it with an underscore)
     │
 637 │   defp handle_message_action("delete", message_id, params, socket) do
     │                                        ~~~~~~~~~~
     │
     └─ lib/slack_clone_web/live/optimized_channel_live.ex:637:40: SlackCloneWeb.OptimizedChannelLive.handle_message_action/4

     warning: variable "params" is unused (if the variable is not meant to be used, prefix it with an underscore)
     │
 637 │   defp handle_message_action("delete", message_id, params, socket) do
     │                                                    ~~~~~~
     │
     └─ lib/slack_clone_web/live/optimized_channel_live.ex:637:52: SlackCloneWeb.OptimizedChannelLive.handle_message_action/4

     warning: default values for the optional arguments in add_message_to_state/3 are never used
     │
 472 │   defp add_message_to_state(socket, message, opts \\ []) do
     │        ~
     │
     └─ lib/slack_clone_web/live/optimized_channel_live.ex:472:8: SlackCloneWeb.OptimizedChannelLive (module)

    warning: unused alias Presence
    │
  9 │   alias SlackCloneWeb.Presence
    │   ~
    │
    └─ lib/slack_clone_web/live/optimized_channel_live.ex:9:3

warning: invalid association `file_upload` in schema SlackClone.Files.FilePreview: associated schema SlackClone.Files.FileUpload does not exist
└─ lib/slack_clone/files/file_preview.ex: SlackClone.Files.FilePreview (module)

     warning: variable "days_back" is unused (if the variable is not meant to be used, prefix it with an underscore)
     │
 274 │   def calculate_availability_score(user_id, days_back \\ 7) do
     │                                             ~~~~~~~~~
     │
     └─ lib/slack_clone/presence_enhanced/presence_history.ex:274:45: SlackClone.PresenceEnhanced.PresenceHistory.calculate_availability_score/2

     warning: variable "user_id" is unused (if the variable is not meant to be used, prefix it with an underscore)
     │
 274 │   def calculate_availability_score(user_id, days_back \\ 7) do
     │                                    ~~~~~~~
     │
     └─ lib/slack_clone/presence_enhanced/presence_history.ex:274:36: SlackClone.PresenceEnhanced.PresenceHistory.calculate_availability_score/2

     warning: variable "days_back" is unused (if the variable is not meant to be used, prefix it with an underscore)
     │
 280 │   def get_peak_activity_hours(user_id, days_back \\ 30) do
     │                                        ~~~~~~~~~
     │
     └─ lib/slack_clone/presence_enhanced/presence_history.ex:280:40: SlackClone.PresenceEnhanced.PresenceHistory.get_peak_activity_hours/2

     warning: variable "user_id" is unused (if the variable is not meant to be used, prefix it with an underscore)
     │
 280 │   def get_peak_activity_hours(user_id, days_back \\ 30) do
     │                               ~~~~~~~
     │
     └─ lib/slack_clone/presence_enhanced/presence_history.ex:280:31: SlackClone.PresenceEnhanced.PresenceHistory.get_peak_activity_hours/2

     warning: variable "user_id" is unused (if the variable is not meant to be used, prefix it with an underscore)
     │
 285 │   def calculate_response_time_correlation(user_id) do
     │                                           ~~~~~~~
     │
     └─ lib/slack_clone/presence_enhanced/presence_history.ex:285:43: SlackClone.PresenceEnhanced.PresenceHistory.calculate_response_time_correlation/1

     warning: variable "user_id" is unused (if the variable is not meant to be used, prefix it with an underscore)
     │
 296 │   def detect_work_patterns(user_id, weeks_back \\ 4) do
     │                            ~~~~~~~
     │
     └─ lib/slack_clone/presence_enhanced/presence_history.ex:296:28: SlackClone.PresenceEnhanced.PresenceHistory.detect_work_patterns/2

     warning: variable "weeks_back" is unused (if the variable is not meant to be used, prefix it with an underscore)
     │
 296 │   def detect_work_patterns(user_id, weeks_back \\ 4) do
     │                                     ~~~~~~~~~~
     │
     └─ lib/slack_clone/presence_enhanced/presence_history.ex:296:37: SlackClone.PresenceEnhanced.PresenceHistory.detect_work_patterns/2

    warning: module attribute @delivery_methods was set but never used
    │
 10 │   @delivery_methods ~w(push email sms)
    │   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    │
    └─ lib/slack_clone/notifications/notification.ex:10: SlackClone.Notifications.Notification (module)

[error] Error when calling MFA defined by measurement: SlackCloneWeb.Telemetry :dispatch_cache_stats []
Class=:exit
Reason={:redix_exited_during_call, :noproc}
Stacktrace=[
  {Redix.Connection, :pipeline, 4,
   [file: ~c"lib/redix/connection.ex", line: 85]},
  {Redix, :command, 3, [file: ~c"lib/redix.ex", line: 509]},
  {SlackClone.Performance.CacheManager, :get_stats, 0,
   [file: ~c"lib/slack_clone/performance/cache_manager.ex", line: 301]},
  {SlackCloneWeb.Telemetry, :dispatch_cache_stats, 0,
   [file: ~c"lib/slack_clone_web/telemetry.ex", line: 258]},
  {:telemetry_poller, :make_measurement, 1,
   [
     file: ~c"/Users/speed/Downloads/experiments/slack_clone/deps/telemetry_poller/src/telemetry_poller.erl",
     line: 474
   ]},
  {:telemetry_poller, :"-make_measurements_and_filter_misbehaving/1-lc$^0/1-0-",
   1,
   [
     file: ~c"/Users/speed/Downloads/experiments/slack_clone/deps/telemetry_poller/src/telemetry_poller.erl",
     line: 470
   ]},
  {:telemetry_poller, :"-make_measurements_and_filter_misbehaving/1-lc$^0/1-0-",
   1,
   [
     file: ~c"/Users/speed/Downloads/experiments/slack_clone/deps/telemetry_poller/src/telemetry_poller.erl",
     line: 470
   ]},
  {:telemetry_poller, :handle_info, 2,
   [
     file: ~c"/Users/speed/Downloads/experiments/slack_clone/deps/telemetry_poller/src/telemetry_poller.erl",
     line: 495
   ]},
  {:gen_server, :try_handle_info, 3, [file: ~c"gen_server.erl", line: 2434]},
  {:gen_server, :handle_msg, 3, [file: ~c"gen_server.erl", line: 2420]},
  {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 333]}
]

[error] GenServer SlackClone.Repo terminating
** (FunctionClauseError) no function clause matching in :supervisor.handle_call/3
    (stdlib 7.0.2) supervisor.erl:1018: :supervisor.handle_call(:get_connection_metrics, {#PID<0.589.0>, #Reference<0.831364254.3973840897.166480>}, {:state, {:local, SlackClone.Repo}, :one_for_one, {[DBConnection.ConnectionPool], %{DBConnection.ConnectionPool => {:child, #PID<0.592.0>, DBConnection.ConnectionPool, {Ecto.Repo.Supervisor, :start_child, [{DBConnection.ConnectionPool, :start_link, [{Postgrex.Protocol, [types: Postgrex.DefaultTypes, port: 5432, pool: DBConnection.ConnectionPool, repo: SlackClone.Repo, telemetry_prefix: [:slack_clone, :repo], otp_app: :slack_clone, timeout: 15000, username: "postgres", password: "postgres", hostname: "localhost", database: "slack_clone_dev", stacktrace: true, show_sensitive_data_on_connection_error: true, pool_size: 10]}]}, SlackClone.Repo, Ecto.Adapters.Postgres, %{opts: [pool: DBConnection.ConnectionPool, repo: SlackClone.Repo, timeout: 15000, pool_size: 10], cache: #Reference<0.831364254.3973971969.166474>, stacktrace: true, repo: SlackClone.Repo, telemetry: {SlackClone.Repo, :debug, [:slack_clone, :repo, :query]}, log_stacktrace_mfa: {Ecto.Adapters.SQL, :first_non_ecto_stacktrace, [1]}, sql: Ecto.Adapters.Postgres.Connection}]}, :permanent, false, 5000, :worker, [Ecto.Repo.Supervisor]}}}, :undefined, 0, 5, [], 0, 0, :never, 1000, #Reference<0.831364254.3973840897.166475>, Ecto.Repo.Supervisor, {SlackClone.Repo, SlackClone.Repo, :slack_clone, Ecto.Adapters.Postgres, []}})
    (stdlib 7.0.2) gen_server.erl:2470: :gen_server.try_handle_call/4
    (stdlib 7.0.2) gen_server.erl:2499: :gen_server.handle_msg/3
    (stdlib 7.0.2) proc_lib.erl:333: :proc_lib.init_p_do_apply/3
Last message (from #PID<0.589.0>): :get_connection_metrics
State: {:state, {:local, SlackClone.Repo}, :one_for_one, {[DBConnection.ConnectionPool], %{DBConnection.ConnectionPool => {:child, #PID<0.592.0>, DBConnection.ConnectionPool, {Ecto.Repo.Supervisor, :start_child, [{DBConnection.ConnectionPool, :start_link, [{Postgrex.Protocol, [types: Postgrex.DefaultTypes, port: 5432, pool: DBConnection.ConnectionPool, repo: SlackClone.Repo, telemetry_prefix: [:slack_clone, :repo], otp_app: :slack_clone, timeout: 15000, username: "postgres", password: "postgres", hostname: "localhost", database: "slack_clone_dev", stacktrace: true, show_sensitive_data_on_connection_error: true, pool_size: 10]}]}, SlackClone.Repo, Ecto.Adapters.Postgres, %{opts: [pool: DBConnection.ConnectionPool, repo: SlackClone.Repo, timeout: 15000, pool_size: 10], cache: #Reference<0.831364254.3973971969.166474>, stacktrace: true, repo: SlackClone.Repo, telemetry: {SlackClone.Repo, :debug, [:slack_clone, :repo, :query]}, log_stacktrace_mfa: {Ecto.Adapters.SQL, :first_non_ecto_stacktrace, [1]}, sql: Ecto.Adapters.Postgres.Connection}]}, :permanent, false, 5000, :worker, [Ecto.Repo.Supervisor]}}}, :undefined, 0, 5, [], 0, 0, :never, 1000, #Reference<0.831364254.3973840897.166475>, Ecto.Repo.Supervisor, {SlackClone.Repo, SlackClone.Repo, :slack_clone, Ecto.Adapters.Postgres, []}}
Client #PID<0.589.0> is alive

    (stdlib 7.0.2) gen.erl:243: :gen.do_call/4
    (elixir 1.18.4) lib/gen_server.ex:1125: GenServer.call/3
    (slack_clone 0.1.0) lib/slack_clone_web/telemetry.ex:275: SlackCloneWeb.Telemetry.dispatch_pool_stats/0
    (telemetry_poller 1.3.0) /Users/speed/Downloads/experiments/slack_clone/deps/telemetry_poller/src/telemetry_poller.erl:474: :telemetry_poller.make_measurement/1
    (telemetry_poller 1.3.0) /Users/speed/Downloads/experiments/slack_clone/deps/telemetry_poller/src/telemetry_poller.erl:470: :telemetry_poller."-make_measurements_and_filter_misbehaving/1-lc$^0/1-0-"/1
    (telemetry_poller 1.3.0) /Users/speed/Downloads/experiments/slack_clone/deps/telemetry_poller/src/telemetry_poller.erl:470: :telemetry_poller."-make_measurements_and_filter_misbehaving/1-lc$^0/1-0-"/1
    (telemetry_poller 1.3.0) /Users/speed/Downloads/experiments/slack_clone/deps/telemetry_poller/src/telemetry_poller.erl:495: :telemetry_poller.handle_info/2
    (stdlib 7.0.2) gen_server.erl:2434: :gen_server.try_handle_info/3
    (stdlib 7.0.2) gen_server.erl:2420: :gen_server.handle_msg/3
    (stdlib 7.0.2) proc_lib.erl:333: :proc_lib.init_p_do_apply/3
[error] Error when calling MFA defined by measurement: SlackCloneWeb.Telemetry :dispatch_pool_stats []
Class=:exit
Reason={{:function_clause,
  [
    {:supervisor, :handle_call,
     [
       :get_connection_metrics,
       {#PID<0.589.0>, #Reference<0.831364254.3973840897.166480>},
       {:state, {:local, SlackClone.Repo}, :one_for_one,
        {[DBConnection.ConnectionPool],
         %{
           DBConnection.ConnectionPool => {:child, #PID<0.592.0>,
            DBConnection.ConnectionPool,
            {Ecto.Repo.Supervisor, :start_child,
             [
               {DBConnection.ConnectionPool, :start_link,
                [
                  {Postgrex.Protocol,
                   [
                     types: Postgrex.DefaultTypes,
                     port: 5432,
                     pool: DBConnection.ConnectionPool,
                     repo: SlackClone.Repo,
                     telemetry_prefix: [:slack_clone, :repo],
                     otp_app: :slack_clone,
                     timeout: 15000,
                     username: "postgres",
                     password: "postgres",
                     hostname: "localhost",
                     database: "slack_clone_dev",
                     stacktrace: true,
                     show_sensitive_data_on_connection_error: true,
                     pool_size: 10
                   ]}
                ]},
               SlackClone.Repo,
               Ecto.Adapters.Postgres,
               %{
                 opts: [
                   pool: DBConnection.ConnectionPool,
                   repo: SlackClone.Repo,
                   timeout: 15000,
                   pool_size: 10
                 ],
                 cache: #Reference<0.831364254.3973971969.166474>,
                 stacktrace: true,
                 repo: SlackClone.Repo,
                 telemetry: {SlackClone.Repo, :debug,
                  [:slack_clone, :repo, :query]},
                 log_stacktrace_mfa: {Ecto.Adapters.SQL,
                  :first_non_ecto_stacktrace, [1]},
                 sql: Ecto.Adapters.Postgres.Connection
               }
             ]}, :permanent, false, 5000, :worker, [Ecto.Repo.Supervisor]}
         }}, :undefined, 0, 5, [], 0, 0, :never, 1000,
        #Reference<0.831364254.3973840897.166475>, Ecto.Repo.Supervisor,
        {SlackClone.Repo, SlackClone.Repo, :slack_clone, Ecto.Adapters.Postgres,
         []}}
     ], [file: ~c"supervisor.erl", line: 1018]},
    {:gen_server, :try_handle_call, 4, [file: ~c"gen_server.erl", line: 2470]},
    {:gen_server, :handle_msg, 3, [file: ~c"gen_server.erl", line: 2499]},
    {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 333]}
  ]}, {GenServer, :call, [SlackClone.Repo, :get_connection_metrics, :infinity]}}
Stacktrace=[
  {GenServer, :call, 3, [file: ~c"lib/gen_server.ex", line: 1128]},
  {SlackCloneWeb.Telemetry, :dispatch_pool_stats, 0,
   [file: ~c"lib/slack_clone_web/telemetry.ex", line: 275]},
  {:telemetry_poller, :make_measurement, 1,
   [
     file: ~c"/Users/speed/Downloads/experiments/slack_clone/deps/telemetry_poller/src/telemetry_poller.erl",
     line: 474
   ]},
  {:telemetry_poller, :"-make_measurements_and_filter_misbehaving/1-lc$^0/1-0-",
   1,
   [
     file: ~c"/Users/speed/Downloads/experiments/slack_clone/deps/telemetry_poller/src/telemetry_poller.erl",
     line: 470
   ]},
  {:telemetry_poller, :"-make_measurements_and_filter_misbehaving/1-lc$^0/1-0-",
   1,
   [
     file: ~c"/Users/speed/Downloads/experiments/slack_clone/deps/telemetry_poller/src/telemetry_poller.erl",
     line: 470
   ]},
  {:telemetry_poller, :handle_info, 2,
   [
     file: ~c"/Users/speed/Downloads/experiments/slack_clone/deps/telemetry_poller/src/telemetry_poller.erl",
     line: 495
   ]},
  {:gen_server, :try_handle_info, 3, [file: ~c"gen_server.erl", line: 2434]},
  {:gen_server, :handle_msg, 3, [file: ~c"gen_server.erl", line: 2420]},
  {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 333]}
]

[error] Error when calling MFA defined by measurement: SlackCloneWeb.Telemetry :dispatch_performance_health []
Class=:error
Reason=%Protocol.UndefinedError{
  protocol: Enumerable,
  value: {:scheduler_wall_time_all,
   [
     {:normal, 1, 330834, 11962500},
     {:normal, 2, 7042, 4031208},
     {:normal, 3, 3501, 5999291},
     {:normal, 4, 6083, 11429208},
     {:normal, 5, 3501, 4746375},
     {:normal, 6, 4126, 5764334},
     {:normal, 7, 3666, 4327875},
     {:normal, 8, 3292, 5708167},
     {:normal, 9, 2792, 11083584},
     {:normal, 10, 7458, 6022334},
     {:cpu, 11, 11250, 37533605459},
     {:cpu, 12, 32291, 37533607542},
     {:cpu, 13, 120541, 37533610375},
     {:cpu, 14, 11500, 37533612417},
     {:cpu, 15, 9333, 37533615334},
     {:cpu, 16, 4833, 37533617500},
     {:cpu, 17, 3709, 37533620084},
     {:cpu, 18, 3208, 37533622084},
     {:cpu, 19, 3125, 37533624584},
     {:cpu, 20, 391500, 37533624625},
     {:io, 21, 685751, 37533624667},
     {:io, 22, 163741258, 37533624709},
     {:io, 23, 1193125, 37533624792},
     {:io, 24, 796942840, 37533624834},
     {:io, 25, 3809336, 37533627584},
     {:io, 26, 3750376, 37533632417},
     {:io, 27, 535417, 37533632459},
     {:io, 28, 44852991, 37533632500},
     {:io, 29, 1482333, 37533634667},
     {:io, 30, 1675208, 37533634709}
   ]},
  description: ""
}
Stacktrace=[
  {Enumerable, :impl_for!, 1, [file: ~c"lib/enum.ex", line: 1]},
  {Enumerable, :reduce, 3, [file: ~c"lib/enum.ex", line: 166]},
  {Enum, :map, 2, [file: ~c"lib/enum.ex", line: 4515]},
  {SlackCloneWeb.Telemetry, :calculate_cpu_health, 0,
   [file: ~c"lib/slack_clone_web/telemetry.ex", line: 339]},
  {SlackCloneWeb.Telemetry, :calculate_health_score, 0,
   [file: ~c"lib/slack_clone_web/telemetry.ex", line: 312]},
  {SlackCloneWeb.Telemetry, :dispatch_performance_health, 0,
   [file: ~c"lib/slack_clone_web/telemetry.ex", line: 291]},
  {:telemetry_poller, :make_measurement, 1,
   [
     file: ~c"/Users/speed/Downloads/experiments/slack_clone/deps/telemetry_poller/src/telemetry_poller.erl",
     line: 474
   ]},
  {:telemetry_poller, :"-make_measurements_and_filter_misbehaving/1-lc$^0/1-0-",
   1,
   [
     file: ~c"/Users/speed/Downloads/experiments/slack_clone/deps/telemetry_poller/src/telemetry_poller.erl",
     line: 470
   ]},
  {:telemetry_poller, :"-make_measurements_and_filter_misbehaving/1-lc$^0/1-0-",
   1,
   [
     file: ~c"/Users/speed/Downloads/experiments/slack_clone/deps/telemetry_poller/src/telemetry_poller.erl",
     line: 470
   ]},
  {:telemetry_poller, :handle_info, 2,
   [
     file: ~c"/Users/speed/Downloads/experiments/slack_clone/deps/telemetry_poller/src/telemetry_poller.erl",
     line: 495
   ]},
  {:gen_server, :try_handle_info, 3, [file: ~c"gen_server.erl", line: 2434]},
  {:gen_server, :handle_msg, 3, [file: ~c"gen_server.erl", line: 2420]},
  {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 333]}
]

[error] Error when calling MFA defined by measurement: SlackClone.Performance.ConnectionPoolOptimizer :emit_pool_metrics []
Class=:exit
Reason={:noproc,
 {GenServer, :call,
  [SlackClone.Performance.ConnectionPoolOptimizer, :get_pool_metrics, 5000]}}
Stacktrace=[
  {GenServer, :call, 3, [file: ~c"lib/gen_server.ex", line: 1121]},
  {SlackClone.Performance.ConnectionPoolOptimizer, :emit_pool_metrics, 0,
   [
     file: ~c"lib/slack_clone/performance/connection_pool_optimizer.ex",
     line: 506
   ]},
  {:telemetry_poller, :make_measurement, 1,
   [
     file: ~c"/Users/speed/Downloads/experiments/slack_clone/deps/telemetry_poller/src/telemetry_poller.erl",
     line: 474
   ]},
  {:telemetry_poller, :"-make_measurements_and_filter_misbehaving/1-lc$^0/1-0-",
   1,
   [
     file: ~c"/Users/speed/Downloads/experiments/slack_clone/deps/telemetry_poller/src/telemetry_poller.erl",
     line: 470
   ]},
  {:telemetry_poller, :"-make_measurements_and_filter_misbehaving/1-lc$^0/1-0-",
   1,
   [
     file: ~c"/Users/speed/Downloads/experiments/slack_clone/deps/telemetry_poller/src/telemetry_poller.erl",
     line: 470
   ]},
  {:telemetry_poller, :handle_info, 2,
   [
     file: ~c"/Users/speed/Downloads/experiments/slack_clone/deps/telemetry_poller/src/telemetry_poller.erl",
     line: 495
   ]},
  {:gen_server, :try_handle_info, 3, [file: ~c"gen_server.erl", line: 2434]},
  {:gen_server, :handle_msg, 3, [file: ~c"gen_server.erl", line: 2420]},
  {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 333]}
]

[error] GenServer SlackClone.Performance.Monitor terminating
** (FunctionClauseError) no function clause matching in SlackClone.Performance.Monitor.handle_call/3
    (slack_clone 0.1.0) lib/slack_clone/performance/monitor.ex:114: SlackClone.Performance.Monitor.handle_call(:get_metrics, {#PID<0.589.0>, [:alias | #Reference<0.0.75395.831364254.3973906434.111709>]}, %{response_time_buffer: %{}, error_count_buffer: %{}, current_metrics: %SlackClone.Performance.Monitor.Metrics{timestamp: nil, response_times: nil, cache_stats: nil, pubsub_stats: nil, system_stats: nil, database_stats: nil, liveview_stats: nil, error_counts: nil, active_connections: nil, message_throughput: nil}, alerts: []})
    (stdlib 7.0.2) gen_server.erl:2470: :gen_server.try_handle_call/4
    (stdlib 7.0.2) gen_server.erl:2499: :gen_server.handle_msg/3
    (stdlib 7.0.2) proc_lib.erl:333: :proc_lib.init_p_do_apply/3
Last message (from #PID<0.589.0>): :get_metrics
State: %{response_time_buffer: %{}, error_count_buffer: %{}, current_metrics: %SlackClone.Performance.Monitor.Metrics{timestamp: nil, response_times: nil, cache_stats: nil, pubsub_stats: nil, system_stats: nil, database_stats: nil, liveview_stats: nil, error_counts: nil, active_connections: nil, message_throughput: nil}, alerts: []}
Client #PID<0.589.0> is alive

    (stdlib 7.0.2) gen.erl:262: :gen.do_call/4
    (elixir 1.18.4) lib/gen_server.ex:1125: GenServer.call/3
    (slack_clone 0.1.0) lib/slack_clone/performance/monitor.ex:751: SlackClone.Performance.Monitor.emit_health_metrics/0
    (telemetry_poller 1.3.0) /Users/speed/Downloads/experiments/slack_clone/deps/telemetry_poller/src/telemetry_poller.erl:474: :telemetry_poller.make_measurement/1
    (telemetry_poller 1.3.0) /Users/speed/Downloads/experiments/slack_clone/deps/telemetry_poller/src/telemetry_poller.erl:470: :telemetry_poller."-make_measurements_and_filter_misbehaving/1-lc$^0/1-0-"/1
    (telemetry_poller 1.3.0) /Users/speed/Downloads/experiments/slack_clone/deps/telemetry_poller/src/telemetry_poller.erl:470: :telemetry_poller."-make_measurements_and_filter_misbehaving/1-lc$^0/1-0-"/1
    (telemetry_poller 1.3.0) /Users/speed/Downloads/experiments/slack_clone/deps/telemetry_poller/src/telemetry_poller.erl:495: :telemetry_poller.handle_info/2
    (stdlib 7.0.2) gen_server.erl:2434: :gen_server.try_handle_info/3
    (stdlib 7.0.2) gen_server.erl:2420: :gen_server.handle_msg/3
    (stdlib 7.0.2) proc_lib.erl:333: :proc_lib.init_p_do_apply/3
[error] Error when calling MFA defined by measurement: SlackClone.Performance.Monitor :emit_health_metrics []
Class=:exit
Reason={{:function_clause,
  [
    {SlackClone.Performance.Monitor, :handle_call,
     [
       :get_metrics,
       {#PID<0.589.0>,
        [:alias | #Reference<0.0.75395.831364254.3973906434.111709>]},
       %{
         response_time_buffer: %{},
         error_count_buffer: %{},
         current_metrics: %SlackClone.Performance.Monitor.Metrics{
           timestamp: nil,
           response_times: nil,
           cache_stats: nil,
           pubsub_stats: nil,
           system_stats: nil,
           database_stats: nil,
           liveview_stats: nil,
           error_counts: nil,
           active_connections: nil,
           message_throughput: nil
         },
         alerts: []
       }
     ], [file: ~c"lib/slack_clone/performance/monitor.ex", line: 114]},
    {:gen_server, :try_handle_call, 4, [file: ~c"gen_server.erl", line: 2470]},
    {:gen_server, :handle_msg, 3, [file: ~c"gen_server.erl", line: 2499]},
    {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 333]}
  ]}, {GenServer, :call, [SlackClone.Performance.Monitor, :get_metrics, 5000]}}
Stacktrace=[
  {GenServer, :call, 3, [file: ~c"lib/gen_server.ex", line: 1128]},
  {SlackClone.Performance.Monitor, :emit_health_metrics, 0,
   [file: ~c"lib/slack_clone/performance/monitor.ex", line: 751]},
  {:telemetry_poller, :make_measurement, 1,
   [
     file: ~c"/Users/speed/Downloads/experiments/slack_clone/deps/telemetry_poller/src/telemetry_poller.erl",
     line: 474
   ]},
  {:telemetry_poller, :"-make_measurements_and_filter_misbehaving/1-lc$^0/1-0-",
   1,
   [
     file: ~c"/Users/speed/Downloads/experiments/slack_clone/deps/telemetry_poller/src/telemetry_poller.erl",
     line: 470
   ]},
  {:telemetry_poller, :"-make_measurements_and_filter_misbehaving/1-lc$^0/1-0-",
   1,
   [
     file: ~c"/Users/speed/Downloads/experiments/slack_clone/deps/telemetry_poller/src/telemetry_poller.erl",
     line: 470
   ]},
  {:telemetry_poller, :handle_info, 2,
   [
     file: ~c"/Users/speed/Downloads/experiments/slack_clone/deps/telemetry_poller/src/telemetry_poller.erl",
     line: 495
   ]},
  {:gen_server, :try_handle_info, 3, [file: ~c"gen_server.erl", line: 2434]},
  {:gen_server, :handle_msg, 3, [file: ~c"gen_server.erl", line: 2420]},
  {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 333]}
]

[error] Error when calling MFA defined by measurement: SlackClone.Performance.CacheManager :emit_cache_metrics []
Class=:exit
Reason={:redix_exited_during_call, :noproc}
Stacktrace=[
  {Redix.Connection, :pipeline, 4,
   [file: ~c"lib/redix/connection.ex", line: 85]},
  {Redix, :command, 3, [file: ~c"lib/redix.ex", line: 509]},
  {SlackClone.Performance.CacheManager, :get_stats, 0,
   [file: ~c"lib/slack_clone/performance/cache_manager.ex", line: 301]},
  {SlackClone.Performance.CacheManager, :emit_cache_metrics, 0,
   [file: ~c"lib/slack_clone/performance/cache_manager.ex", line: 345]},
  {:telemetry_poller, :make_measurement, 1,
   [
     file: ~c"/Users/speed/Downloads/experiments/slack_clone/deps/telemetry_poller/src/telemetry_poller.erl",
     line: 474
   ]},
  {:telemetry_poller, :"-make_measurements_and_filter_misbehaving/1-lc$^0/1-0-",
   1,
   [
     file: ~c"/Users/speed/Downloads/experiments/slack_clone/deps/telemetry_poller/src/telemetry_poller.erl",
     line: 470
   ]},
  {:telemetry_poller, :"-make_measurements_and_filter_misbehaving/1-lc$^0/1-0-",
   1,
   [
     file: ~c"/Users/speed/Downloads/experiments/slack_clone/deps/telemetry_poller/src/telemetry_poller.erl",
     line: 470
   ]},
  {:telemetry_poller, :handle_info, 2,
   [
     file: ~c"/Users/speed/Downloads/experiments/slack_clone/deps/telemetry_poller/src/telemetry_poller.erl",
     line: 495
   ]},
  {:gen_server, :try_handle_info, 3, [file: ~c"gen_server.erl", line: 2434]},
  {:gen_server, :handle_msg, 3, [file: ~c"gen_server.erl", line: 2420]},
  {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 333]}
]

[info] Starting SlackClone.Services.Supervisor
[error] GenServer {Oban.Registry, {Oban, Oban.Peer}} terminating
** (RuntimeError) could not lookup Ecto repo SlackClone.Repo because it was not started or it does not exist
    (ecto 3.13.2) lib/ecto/repo/registry.ex:22: Ecto.Repo.Registry.lookup/1
    (ecto 3.13.2) lib/ecto/repo/supervisor.ex:176: Ecto.Repo.Supervisor.tuplet/2
    (slack_clone 0.1.0) lib/slack_clone/repo.ex:2: SlackClone.Repo.transact/2
    (oban 2.20.1) lib/oban/repo.ex:156: Oban.Repo.transaction/4
    (oban 2.20.1) lib/oban/peers/database.ex:108: anonymous fn/2 in Oban.Peers.Database.handle_info/2
    (telemetry 1.3.0) /Users/speed/Downloads/experiments/slack_clone/deps/telemetry/src/telemetry.erl:324: :telemetry.span/3
    (oban 2.20.1) lib/oban/peers/database.ex:101: Oban.Peers.Database.handle_info/2
    (stdlib 7.0.2) gen_server.erl:2424: :gen_server.try_handle_continue/3
    (stdlib 7.0.2) gen_server.erl:2291: :gen_server.loop/4
    (stdlib 7.0.2) proc_lib.erl:333: :proc_lib.init_p_do_apply/3
Last message: {:continue, :start}
State: %Oban.Peers.Database{conf: %Oban.Config{dispatch_cooldown: 5, engine: Oban.Engines.Basic, get_dynamic_repo: nil, insert_trigger: true, log: false, name: Oban, node: "Mac", notifier: {Oban.Notifiers.Postgres, []}, peer: {Oban.Peers.Database, []}, plugins: [{Oban.Plugins.Pruner, []}], prefix: "public", queues: [default: [limit: 10], notifications: [limit: 5], uploads: [limit: 3]], repo: SlackClone.Repo, shutdown_grace_period: 15000, stage_interval: 1000, testing: :disabled}, timer: nil, interval: 30000, leader?: false, leader_boost: 2}
[error] GenServer {Oban.Registry, {Oban, Oban.Sonar}} terminating
** (RuntimeError) could not lookup Ecto repo SlackClone.Repo because it was not started or it does not exist
    (ecto 3.13.2) lib/ecto/repo/registry.ex:22: Ecto.Repo.Registry.lookup/1
    (ecto_sql 3.13.2) lib/ecto/adapters/sql.ex:622: Ecto.Adapters.SQL.query/4
    (oban 2.20.1) lib/oban/notifiers/postgres.ex:101: Oban.Notifiers.Postgres.notify/3
    (oban 2.20.1) lib/oban/notifier.ex:204: anonymous fn/4 in Oban.Notifier.notify/3
    (telemetry 1.3.0) /Users/speed/Downloads/experiments/slack_clone/deps/telemetry/src/telemetry.erl:324: :telemetry.span/3
    (oban 2.20.1) lib/oban/sonar.ex:50: Oban.Sonar.handle_continue/2
    (stdlib 7.0.2) gen_server.erl:2424: :gen_server.try_handle_continue/3
    (stdlib 7.0.2) gen_server.erl:2291: :gen_server.loop/4
    (stdlib 7.0.2) proc_lib.erl:333: :proc_lib.init_p_do_apply/3
Last message: {:continue, :start}
State: %Oban.Sonar{conf: %Oban.Config{dispatch_cooldown: 5, engine: Oban.Engines.Basic, get_dynamic_repo: nil, insert_trigger: true, log: false, name: Oban, node: "Mac", notifier: {Oban.Notifiers.Postgres, []}, peer: {Oban.Peers.Database, []}, plugins: [{Oban.Plugins.Pruner, []}], prefix: "public", queues: [default: [limit: 10], notifications: [limit: 5], uploads: [limit: 3]], repo: SlackClone.Repo, shutdown_grace_period: 15000, stage_interval: 1000, testing: :disabled}, timer: nil, interval: 5000, nodes: %{}, stale_mult: 6, status: :unknown}
[error] GenServer {Oban.Registry, {Oban, Oban.Stager}} terminating
** (stop) exited in: GenServer.call({:via, Registry, {Oban.Registry, {Oban, Oban.Sonar}}}, :get_status, 5000)
    ** (EXIT) an exception was raised:
        ** (RuntimeError) could not lookup Ecto repo SlackClone.Repo because it was not started or it does not exist
            (ecto 3.13.2) lib/ecto/repo/registry.ex:22: Ecto.Repo.Registry.lookup/1
            (ecto_sql 3.13.2) lib/ecto/adapters/sql.ex:622: Ecto.Adapters.SQL.query/4
            (oban 2.20.1) lib/oban/notifiers/postgres.ex:101: Oban.Notifiers.Postgres.notify/3
            (oban 2.20.1) lib/oban/notifier.ex:204: anonymous fn/4 in Oban.Notifier.notify/3
            (telemetry 1.3.0) /Users/speed/Downloads/experiments/slack_clone/deps/telemetry/src/telemetry.erl:324: :telemetry.span/3
            (oban 2.20.1) lib/oban/sonar.ex:50: Oban.Sonar.handle_continue/2
            (stdlib 7.0.2) gen_server.erl:2424: :gen_server.try_handle_continue/3
            (stdlib 7.0.2) gen_server.erl:2291: :gen_server.loop/4
            (stdlib 7.0.2) proc_lib.erl:333: :proc_lib.init_p_do_apply/3
    (elixir 1.18.4) lib/gen_server.ex:1128: GenServer.call/3
    (oban 2.20.1) lib/oban/notifier.ex:252: Oban.Notifier.status/1
    (oban 2.20.1) lib/oban/stager.ex:127: Oban.Stager.check_mode/1
    (oban 2.20.1) lib/oban/stager.ex:55: Oban.Stager.handle_info/2
    (stdlib 7.0.2) gen_server.erl:2434: :gen_server.try_handle_info/3
    (stdlib 7.0.2) gen_server.erl:2420: :gen_server.handle_msg/3
    (stdlib 7.0.2) proc_lib.erl:333: :proc_lib.init_p_do_apply/3
Last message: :stage
State: %Oban.Stager{conf: %Oban.Config{dispatch_cooldown: 5, engine: Oban.Engines.Basic, get_dynamic_repo: nil, insert_trigger: true, log: false, name: Oban, node: "Mac", notifier: {Oban.Notifiers.Postgres, []}, peer: {Oban.Peers.Database, []}, plugins: [{Oban.Plugins.Pruner, []}], prefix: "public", queues: [default: [limit: 10], notifications: [limit: 5], uploads: [limit: 3]], repo: SlackClone.Repo, shutdown_grace_period: 15000, stage_interval: 1000, testing: :disabled}, timer: #Reference<0.831364254.3973840897.166834>, interval: 1000, limit: 5000, mode: :global}
[notice] Application slack_clone exited: SlackClone.Application.start(:normal, []) returned an error: shutdown: failed to start child: SlackClone.Services.Supervisor
    ** (EXIT) shutdown: failed to start child: SlackClone.Performance.Monitor
        ** (EXIT) already started: #PID<0.618.0>
[notice] Application uuid exited: :stopped
[notice] Application timex exited: :stopped
[notice] Application combine exited: :stopped
[notice] Application tzdata exited: :stopped
[notice] Application dns_cluster exited: :stopped
[notice] Application gettext exited: :stopped
[notice] Application expo exited: :stopped
[notice] Application telemetry_poller exited: :stopped
[notice] Application swoosh exited: :stopped
[notice] Application finch exited: :stopped
[notice] Application nimble_pool exited: :stopped
[notice] Application mint exited: :stopped
[notice] Application tailwind exited: :stopped
[notice] Application esbuild exited: :stopped
[notice] Application plug_attack exited: :stopped
[notice] Application cors_plug exited: :stopped
[notice] Application faker exited: :stopped
[notice] Application ex_machina exited: :stopped
[notice] Application logger_json exited: :stopped
[notice] Application sentry exited: :stopped
[notice] Application nimble_ownership exited: :stopped
[notice] Application oban exited: :stopped
[notice] Application elasticsearch exited: :stopped
[notice] Application vex exited: :stopped
[notice] Application httpoison exited: :stopped
[notice] Application cachex exited: :stopped
[notice] Application sleeplocks exited: :stopped
[notice] Application jumper exited: :stopped
[notice] Application eternal exited: :stopped
[notice] Application unsafe exited: :stopped
[notice] Application redix exited: :stopped
[notice] Application nimble_options exited: :stopped
[notice] Application hammer exited: :stopped
[notice] Application poolboy exited: :stopped
[notice] Application waffle_ecto exited: :stopped
[notice] Application waffle exited: :stopped
[notice] Application ex_aws_s3 exited: :stopped
[notice] Application ex_aws exited: :stopped
[notice] Application sweet_xml exited: :stopped
[notice] Application xmerl exited: :stopped
[notice] Application hackney exited: :stopped
[notice] Application metrics exited: :stopped
[notice] Application ssl_verify_fun exited: :stopped
[notice] Application parse_trans exited: :stopped
[notice] Application syntax_tools exited: :stopped
[notice] Application certifi exited: :stopped
[notice] Application mimerl exited: :stopped
[notice] Application idna exited: :stopped
[notice] Application unicode_util_compat exited: :stopped
[notice] Application argon2_elixir exited: :stopped
[notice] Application guardian_phoenix exited: :stopped
[notice] Application guardian exited: :stopped
[notice] Application jose exited: :stopped
[notice] Application phoenix_live_dashboard exited: :stopped
[notice] Application telemetry_metrics exited: :stopped
[notice] Application phoenix_live_view exited: :stopped
[notice] Application phoenix_live_reload exited: :stopped
[notice] Application file_system exited: :stopped
[notice] Application ecto_sql exited: :stopped
[notice] Application phoenix_ecto exited: :stopped
[notice] Application postgrex exited: :stopped
[notice] Application db_connection exited: :stopped
[notice] Application ecto exited: :stopped
[notice] Application phoenix exited: :stopped
[notice] Application jason exited: :stopped
[notice] Application decimal exited: :stopped
[notice] Application castore exited: :stopped
[notice] Application websock_adapter exited: :stopped
[notice] Application bandit exited: :stopped
[notice] Application hpax exited: :stopped
[notice] Application thousand_island exited: :stopped
[notice] Application websock exited: :stopped
[notice] Application phoenix_template exited: :stopped
[notice] Application phoenix_html exited: :stopped
[notice] Application phoenix_pubsub exited: :stopped
[notice] Application plug exited: :stopped
** (Mix) Could not start application slack_clone: SlackClone.Application.start(:normal, []) returned an error: shutdown: failed to start child: SlackClone.Services.Supervisor
    ** (EXIT) shutdown: failed to start child: SlackClone.Performance.Monitor
        ** (EXIT) already started: #PID<0.618.0>
[notice] Application telemetry exited: :stopped
[notice] Application plug_crypto exited: :stopped
[notice] Application mime exited: :stopped
[notice] Application eex exited: :stopped
[notice] Application bcrypt_elixir exited: :stopped
[notice] Application comeonin exited: :stopped
[notice] Application runtime_tools exited: :stopped
