apiVersion: apps/v1
kind: Deployment
metadata:
  name: slack-clone-blue
  namespace: slack-clone-blue
  labels:
    app: slack-clone
    environment: production
    slot: blue
  annotations:
    deployment.kubernetes.io/revision: "1"
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: slack-clone
      slot: blue
  template:
    metadata:
      labels:
        app: slack-clone
        environment: production
        slot: blue
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "4000"
        prometheus.io/path: "/metrics"
    spec:
      containers:
      - name: slack-clone
        image: ghcr.io/your-org/slack-clone:latest
        imagePullPolicy: IfNotPresent
        ports:
        - name: http
          containerPort: 4000
          protocol: TCP
        env:
        - name: MIX_ENV
          value: "prod"
        - name: PHX_HOST
          value: "0.0.0.0"
        - name: PHX_PORT
          value: "4000"
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: slack-clone-prod-secrets
              key: database-url
        - name: SECRET_KEY_BASE
          valueFrom:
            secretKeyRef:
              name: slack-clone-prod-secrets
              key: secret-key-base
        - name: REDIS_URL
          valueFrom:
            secretKeyRef:
              name: slack-clone-prod-secrets
              key: redis-url
        - name: SENTRY_DSN
          valueFrom:
            secretKeyRef:
              name: slack-clone-prod-secrets
              key: sentry-dsn
        - name: ELASTICSEARCH_URL
          valueFrom:
            configMapKeyRef:
              name: slack-clone-prod-config
              key: elasticsearch-url
        livenessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 30
          periodSeconds: 30
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 5
          periodSeconds: 10
          timeoutSeconds: 3
          failureThreshold: 3
        resources:
          requests:
            cpu: 200m
            memory: 512Mi
          limits:
            cpu: 1000m
            memory: 1Gi
        securityContext:
          runAsNonRoot: true
          runAsUser: 1000
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          capabilities:
            drop:
            - ALL
        volumeMounts:
        - name: tmp
          mountPath: /tmp
        - name: app-logs
          mountPath: /app/logs
      volumes:
      - name: tmp
        emptyDir: {}
      - name: app-logs
        emptyDir: {}
      imagePullSecrets:
      - name: ghcr-secret
      securityContext:
        fsGroup: 1000
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - slack-clone
              topologyKey: kubernetes.io/hostname
---
apiVersion: v1
kind: Service
metadata:
  name: slack-clone-blue
  namespace: slack-clone-blue
  labels:
    app: slack-clone
    environment: production
    slot: blue
spec:
  type: ClusterIP
  ports:
  - port: 4000
    targetPort: http
    protocol: TCP
    name: http
  selector:
    app: slack-clone
    slot: blue