# Production overrides for docker-compose
# Usage: docker-compose -f docker-compose.yml -f docker-compose.prod.yml up -d

services:
  app:
    build:
      target: production
    environment:
      MIX_ENV: prod
      DATABASE_URL: "${DATABASE_URL}"
      EVENTSTORE_URL: "${EVENTSTORE_URL}"
      SECRET_KEY_BASE: "${SECRET_KEY_BASE}"
      PHI_ENCRYPTION_KEY: "${PHI_ENCRYPTION_KEY}"
      REDIS_URL: "${REDIS_URL}"
      RABBITMQ_URL: "${RABBITMQ_URL}"
      PHX_HOST: "${PHX_HOST}"
      PHX_PORT: "${PHX_PORT:-443}"
      PHX_SCHEME: "${PHX_SCHEME:-https}"
      PORT: "4000"
    volumes: []  # Remove development volumes
    restart: unless-stopped
    deploy:
      replicas: 2
      resources:
        limits:
          memory: 512M
          cpus: '0.5'
        reservations:
          memory: 256M
          cpus: '0.25'
      update_config:
        parallelism: 1
        delay: 10s
        failure_action: rollback
        monitor: 60s
        max_failure_ratio: 0.3
      rollback_config:
        parallelism: 1
        delay: 10s
        failure_action: pause
        monitor: 60s
      restart_policy:
        condition: any
        delay: 10s
        max_attempts: 3
        window: 120s

  postgres:
    environment:
      POSTGRES_DB: "${POSTGRES_DB:-rehab_tracking_prod}"
      POSTGRES_USER: "${POSTGRES_USER:-postgres}"
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"
    volumes:
      - postgres_prod_data:/var/lib/postgresql/data
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '0.5'
        reservations:
          memory: 512M
          cpus: '0.25'

  redis:
    command: ["redis-server", "--appendonly", "yes", "--requirepass", "${REDIS_PASSWORD}"]
    environment:
      REDIS_PASSWORD: "${REDIS_PASSWORD}"
    volumes:
      - redis_prod_data:/data
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: '0.25'

  rabbitmq:
    environment:
      RABBITMQ_DEFAULT_USER: "${RABBITMQ_USER:-admin}"
      RABBITMQ_DEFAULT_PASS: "${RABBITMQ_PASSWORD}"
    volumes:
      - rabbitmq_prod_data:/var/lib/rabbitmq
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.25'

  # Remove development-only services
  prometheus:
    profiles: ["monitoring"]
    
  grafana:
    profiles: ["monitoring"]

volumes:
  postgres_prod_data:
  redis_prod_data:
  rabbitmq_prod_data: