# Claude Code Settings
# Configuration for Claude Code integration and SPARC methodology

claude:
  version: "1.0.0"
  mode: "development"
  
  # SPARC Configuration
  sparc:
    enabled: true
    defaultMode: "tdd"
    phases:
      specification:
        timeout: 60000
        detailLevel: "comprehensive"
        includeConstraints: true
        includeAcceptanceCriteria: true
      pseudocode:
        timeout: 120000
        style: "structured"
        includeComplexity: true
        includeErrorHandling: true
      architecture:
        timeout: 180000
        style: "modular"
        includePatterns: true
        includeDependencies: true
      refinement:
        timeout: 300000
        iterations: 3
        testCoverage: 0.8
        codeQualityThreshold: 0.85
      completion:
        timeout: 240000
        includeDocumentation: true
        runTests: true
        performLinting: true
        
  # Agent configuration
  agents:
    maxConcurrent: 6
    defaultTimeout: 300000
    coordinationMode: "mesh"
    
    # Agent types and capabilities
    types:
      researcher:
        capabilities: ["analysis", "documentation", "requirements"]
        maxInstances: 2
        priority: "high"
      coder:
        capabilities: ["implementation", "refactoring", "optimization"]
        maxInstances: 3
        priority: "high"
      tester:
        capabilities: ["unit-tests", "integration-tests", "e2e-tests"]
        maxInstances: 2
        priority: "medium"
      reviewer:
        capabilities: ["code-review", "security-audit", "performance"]
        maxInstances: 1
        priority: "medium"
      architect:
        capabilities: ["system-design", "patterns", "scalability"]
        maxInstances: 1
        priority: "high"

  # Task orchestration
  orchestration:
    strategy: "adaptive"
    loadBalancing: true
    failureRecovery: true
    
    # Task scheduling
    scheduling:
      algorithm: "priority-weighted"
      considerDependencies: true
      maxQueueSize: 50
      
    # Coordination protocols
    coordination:
      heartbeatInterval: 30000
      syncInterval: 60000
      consensusTimeout: 120000

  # Code generation settings
  codeGeneration:
    style: "typescript"
    linting: true
    formatting: true
    
    # Quality standards
    quality:
      maxComplexity: 10
      minCoverage: 0.8
      maxFileSize: 500
      requireTests: true
      requireDocs: true
      
    # Templates and patterns
    templates:
      useBuiltIn: true
      customPath: "./platform/templates"
      autoApply: true
      
  # Testing configuration
  testing:
    framework: "jest"
    coverage: true
    e2e: false
    
    # Test generation
    generation:
      autoGenerate: true
      includeBoundaryTests: true
      includeErrorCases: true
      mockExternalDeps: true
      
    # Test execution
    execution:
      parallel: true
      maxWorkers: 4
      timeout: 30000
      retry: 2

  # Documentation settings
  documentation:
    autoGenerate: true
    format: "markdown"
    includeApi: true
    includeExamples: true
    
    # Content generation
    content:
      includeUsage: true
      includeInstallation: true
      includeTroubleshooting: true
      includeContributing: false

  # Performance and optimization
  performance:
    caching: true
    compression: true
    bundling: false
    
    # Resource management
    resources:
      maxMemory: "4GB"
      maxCpu: 80
      diskQuota: "10GB"
      networkLimit: "100MB/s"
      
  # Integration settings
  integrations:
    git:
      enabled: true
      autoCommit: false
      commitMessage: "feat: ${description}"
      branchStrategy: "feature"
      
    vscode:
      enabled: true
      workspace: true
      extensions:
        - "ms-vscode.vscode-typescript-next"
        - "esbenp.prettier-vscode"
        - "ms-vscode.vscode-jest"
        
    github:
      enabled: false
      autoCreatePR: false
      prTemplate: "./platform/templates/pr-template.md"

# MCP Integration
mcp:
  enabled: true
  registryPath: "./.mcp/registry.yaml"
  clientConfigPath: "./.claude/mcp/clients.yaml"
  
  # Tool preferences
  tools:
    prefer: ["filesystem", "memory", "playwright"]
    timeout: 30000
    retries: 3
    
  # Connection management
  connections:
    maxConcurrent: 10
    poolSize: 5
    keepAlive: true
    
# Workflow automation
workflows:
  enabled: true
  autoTrigger: true
  
  # Predefined workflows
  predefined:
    fullstack:
      steps: ["spec", "arch", "implement", "test", "review"]
      agents: ["researcher", "architect", "coder", "tester", "reviewer"]
      parallel: true
    
    library:
      steps: ["spec", "design", "implement", "test", "doc"]
      agents: ["researcher", "architect", "coder", "tester"]
      parallel: false
      
    bugfix:
      steps: ["analyze", "fix", "test", "verify"]
      agents: ["researcher", "coder", "tester", "reviewer"]
      parallel: false

# Logging and monitoring
monitoring:
  enabled: true
  metricsCollection: true
  performanceTracking: true
  
  # Metrics to track
  metrics:
    - "task_completion_time"
    - "code_quality_score"
    - "test_coverage"
    - "agent_utilization"
    - "error_rate"
    - "throughput"
    
  # Alerting thresholds
  alerts:
    taskTimeout: 600000
    highErrorRate: 0.1
    lowCoverage: 0.6
    lowQuality: 0.7

# Security and compliance
security:
  codeScanning: true
  dependencyCheck: true
  secretDetection: true
  
  # Compliance requirements
  compliance:
    requireLicenseHeaders: false
    requireSecurityReview: false
    requirePerformanceReview: false
    maxDependencies: 100
    
# Development environment
environment:
  nodeVersion: "18.0.0"
  npmVersion: "9.0.0"
  typescriptVersion: "5.0.0"
  
  # Development tools
  tools:
    prettier: true
    eslint: true
    husky: false
    commitizen: false
EOF < /dev/null